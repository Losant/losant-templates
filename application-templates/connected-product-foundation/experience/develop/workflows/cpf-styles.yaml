resourceType: ExperienceFlowVersion
resources:
  - description: Created for Endpoint GET /styles.css
    enabled: true
    exportHash: ab188c7b70a1dfaa6d8cc122bcf5743b1c8c891317a65cb1adf6c1ca4dfc6521
    flowId: ~exportplaceholderid-flow-cpfStyles~
    globals: []
    id: ~exportplaceholderid-flowVersion-cpfStyles~
    name: cpf-styles
    nodes:
      - config:
          bodyTemplate: pageData
          bodyTemplateType: path
          cookieInfo: []
          headerInfo:
            - keyTemplate: Content-Type
              valueTemplate: text/css
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfStyles~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: CK2sMRMyiy
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 40
          'y': 460
        outputIds:
          - - wT7qFKWcUF
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: wT7qFKWcUF
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 40
          'y': 560
        outputIds: []
        type: DebugNode
      - config:
          action: get
          params:
            - name: sortField
              type: string
              value: name
            - name: sortDirection
              type: string
              value: asc
            - name: page
              type: string
              value: '0'
            - name: perPage
              type: string
              value: '1000'
            - name: filterField
              type: string
              value: ''
            - name: filter
              type: string
              value: ''
            - name: viewType
              type: string
              value: component
            - name: version
              type: string
              value: '{{experience.version}}'
          resource: experienceViews
          responsePath: working.allComponents
        id: LHlbiMB4mX
        meta:
          category: data
          description: ''
          label: Losant API
          name: losantapi
          x: 40
          'y': 160
        outputIds:
          - - 3nY586yBCQ
        type: LosantApiNode
      - config:
          scopePath: ''
          script: |-
            let allComponents = payload.working.allComponents.result.items;
            let theme = payload.working.theme.items;

            // Find all style components.
            let filtered = allComponents.filter((c) => { 
                return c.viewTags['content-type'] === 'text/css'
            });

            // Remap the theme to key:value pairs.
            let themeMapped = {};
            theme.forEach((t) => {
                themeMapped[t.name] = t.value;
            });

            if(themeMapped['font_family']) {
                themeMapped['font_family'] = themeMapped['font_family'].replaceAll('+', ' ');
            }

            let colors = [
                'primary',
                'secondary',
                'success',
                'info',
                'warning',
                'danger',
            ];

            payload.pageData = { 
                styles: filtered,
                theme: themeMapped,
                colors: colors
            };
        id: RZSQZH1O_S
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 40
          'y': 360
        outputIds:
          - - CK2sMRMyiy
        type: RawFunctionNode
      - config:
          dataTableIdTemplate: ~exportplaceholderid-dataTable-cpfTheme~
          includeFieldsTemplate: ''
          limitTemplate: '1000'
          offsetTemplate: ''
          queryTemplate: ''
          resultPath: working.theme
          sortColumnTemplate: ''
          sortDirectionTemplate: ''
        id: 3nY586yBCQ
        meta:
          category: data
          description: ''
          label: 'Table: Get Rows'
          name: get-table-rows
          x: 40
          'y': 260
        outputIds:
          - - RZSQZH1O_S
        type: DataTableQueryNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-getStylesCss~
        meta:
          category: trigger
          description: ''
          label: GET /styles.css
          name: endpoint
          uiId: 5lIM44jeV7
          x: 40
          'y': 40
        outputIds:
          - - LHlbiMB4mX
        type: endpoint
    version: develop
version: 1
