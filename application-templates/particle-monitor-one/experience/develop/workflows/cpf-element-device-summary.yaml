resourceType: ExperienceFlowVersion
resources:
  - description: Created for Endpoint GET /cpf/elements/device-summary
    enabled: true
    exportHash: 4b815c8b23e5deac1be4906c967cc8b59f395ae5f552c8416fdc99c416924c5f
    flowId: ~exportplaceholderid-flow-cpfElementDeviceSummary~
    globals: []
    id: ~exportplaceholderid-flowVersion-cpfElementDeviceSummary~
    name: cpf-element-device-summary
    nodes:
      - config:
          bodyTemplate: pageData
          bodyTemplateType: path
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfElementDeviceSummary~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: ph6ubPUV2U
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 260
          'y': 860
        outputIds:
          - - aXFdKLLt3R
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: aXFdKLLt3R
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 260
          'y': 960
        outputIds: []
        type: DebugNode
      - config:
          attributesAsObject: false
          findMetadata: true
          findMethod: findByAllTags
          findMultiple: true
          includeConnectionStatus: false
          includeState: false
          resultPath: working.allDevices
          resultsPage: '0'
          resultsPerPage: '0'
          sortDirection: asc
          sortField: name
          tags:
            - keyTemplate: '{{#eq working.userLevel 1}}cpf_customer{{else}}cpf_site{{/eq}}'
              valueTemplate: '{{experience.user.experienceGroups.[0].id}}'
          tagsAsObject: false
        id: fthdnppASO
        meta:
          category: data
          description: ''
          label: All
          name: get-device
          x: 160
          'y': 480
        outputIds:
          - - L7WZoBOZZu
        type: GetDeviceNode
      - config:
          attributesAsObject: false
          findMetadata: true
          findMethod: query
          findMultiple: true
          includeConnectionStatus: false
          includeState: false
          queryTemplate: |-
            {
              "$and": [
                {
                  "connectionStatus": {
                    "$eq": "connected"
                  }
                },
                {
                  "tags": {
                    "$eq": {
                      "$tagKey": "{{#eq working.userLevel 1}}cpf_customer{{else}}cpf_site{{/eq}}",
                      "$tagValue": "{{experience.user.experienceGroups.[0].id}}"
                    }
                  }
                }
              ]
            }
          resultPath: working.connectedDevices
          resultsPage: '0'
          resultsPerPage: '0'
          sortDirection: asc
          sortField: name
          tagsAsObject: false
        id: L7WZoBOZZu
        meta:
          category: data
          description: ''
          label: Connected
          name: get-device
          x: 160
          'y': 560
        outputIds:
          - - 0HnA5hDqmD
        type: GetDeviceNode
      - config:
          attributesAsObject: false
          findMetadata: true
          findMethod: query
          findMultiple: true
          includeConnectionStatus: false
          includeState: false
          queryTemplate: |-
            {
              "$and": [
                {
                  "tags": {
                    "$eq": {
                      "$tagKey": "{{#eq working.userLevel 1}}cpf_customer{{else}}cpf_site{{/eq}}",
                      "$tagValue": "{{experience.user.experienceGroups.[0].id}}"
                    }
                  }
                },
                {
                  "$or": [
                    {
                      "connectionStatus": {
                        "$eq": "disconnected"
                      }
                    },
                    {
                      "connectionStatus": {
                        "$eq": "unknown"
                      }
                    },
                    {
                      "connectionStatus": {
                        "$eq": "invalid"
                      }
                    }
                  ]
                }
              ]
            }
          resultPath: working.disconnectedDevices
          resultsPage: '0'
          resultsPerPage: '0'
          sortDirection: asc
          sortField: name
          tagsAsObject: false
        id: 0HnA5hDqmD
        meta:
          category: data
          description: ''
          label: Disconnected
          name: get-device
          x: 160
          'y': 640
        outputIds:
          - - eQF5vAtatS
        type: GetDeviceNode
      - config:
          rules:
            - destination: pageData.totalDevices
              type: set
              valueTemplate: '{{working.allDevices.totalCount}}'
              valueTemplateType: json
            - destination: pageData.connectedDevices
              type: set
              valueTemplate: '{{working.connectedDevices.totalCount}}'
              valueTemplateType: json
            - destination: pageData.disconnectedDevices
              type: set
              valueTemplate: '{{working.disconnectedDevices.totalCount}}'
              valueTemplateType: json
        id: eQF5vAtatS
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 260
          'y': 760
        outputIds:
          - - ph6ubPUV2U
        type: MutateNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfGetTenancyLevel~
          customNodeVersion: default
          fields:
            - id: user
              value: experience.user
          isInstance: false
          resultPath: working.userLevel
        id: VTkEGCs0Hm
        meta:
          category: data
          description: ''
          label: 'CPF: Get Tenancy Level'
          name: custom-node-execute-node
          x: 160
          'y': 140
        outputIds:
          - - wjme7zWUC5
          - - Hcp6S9u24Z
        type: CustomNodeExecuteNode
      - config: {}
        id: KFU3MPBOnF
        meta:
          annotationText: >-
            If the user is level=0 (system) we don't need to include the
            experience user ID in the query. This helps prevent the query limit
            if there are lots of customers/sites.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 360
          x: 460
          'y': 260
        outputIds: []
        type: AnnotationNode
      - config:
          attributesAsObject: false
          findMetadata: true
          findMethod: query
          findMultiple: true
          includeConnectionStatus: false
          includeState: false
          queryTemplate: '{"$or":[]}'
          resultPath: working.allDevices
          resultsPage: '0'
          resultsPerPage: '0'
          sortDirection: asc
          sortField: name
          tagsAsObject: false
        id: TI_jDmnnYU
        meta:
          category: data
          description: ''
          label: All
          name: get-device
          x: 360
          'y': 480
        outputIds:
          - - 4c3UhiBtFD
        type: GetDeviceNode
      - config:
          attributesAsObject: false
          findMetadata: true
          findMethod: query
          findMultiple: true
          includeConnectionStatus: false
          includeState: false
          queryTemplate: |-
            {
              "$and": [
                {
                  "connectionStatus": {
                    "$eq": "connected"
                  }
                }
              ]
            }
          resultPath: working.connectedDevices
          resultsPage: '0'
          resultsPerPage: '0'
          sortDirection: asc
          sortField: name
          tagsAsObject: false
        id: 4c3UhiBtFD
        meta:
          category: data
          description: ''
          label: Connected
          name: get-device
          x: 360
          'y': 560
        outputIds:
          - - Bw0cZ2TFIl
        type: GetDeviceNode
      - config:
          attributesAsObject: false
          findMetadata: true
          findMethod: query
          findMultiple: true
          includeConnectionStatus: false
          includeState: false
          queryTemplate: |-
            {
              "$or": [
                {
                  "connectionStatus": {
                    "$eq": "disconnected"
                  }
                },
                {
                  "connectionStatus": {
                    "$eq": "invalid"
                  }
                },
                {
                  "connectionStatus": {
                    "$eq": "unknown"
                  }
                }
              ]
            }
          resultPath: working.disconnectedDevices
          resultsPage: '0'
          resultsPerPage: '0'
          sortDirection: asc
          sortField: name
          tagsAsObject: false
        id: Bw0cZ2TFIl
        meta:
          category: data
          description: ''
          label: Disconnected
          name: get-device
          x: 360
          'y': 640
        outputIds:
          - - eQF5vAtatS
        type: GetDeviceNode
      - config:
          expression: '{{working.userLevel}} === 0'
        id: Hcp6S9u24Z
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 260
          'y': 260
        outputIds:
          - - fthdnppASO
          - - TI_jDmnnYU
        type: ConditionalNode
      - config:
          bodyTemplate: |-
            {
                "error": "User's group membership is invalid."
            }
          bodyTemplateType: string
          cookieInfo: []
          headerInfo:
            - keyTemplate: Content-Type
              valueTemplate: application/json
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: custom
          responseCodeTemplate: '403'
          sameSiteTemplate: ''
        id: wjme7zWUC5
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 60
          'y': 260
        outputIds:
          - - ttDvaofch1
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: ttDvaofch1
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 60
          'y': 360
        outputIds: []
        type: DebugNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-getCpfElementsDeviceSummary~
        meta:
          category: trigger
          description: ''
          label: GET /cpf/elements/device-summary
          name: endpoint
          uiId: jk7UtGjgjh
          x: 160
          'y': 40
        outputIds:
          - - VTkEGCs0Hm
        type: endpoint
    version: develop
version: 1
