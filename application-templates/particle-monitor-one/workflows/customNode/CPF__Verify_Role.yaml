resourceType: Flow
resources:
  - category: experience
    customNodeConfig:
      fields:
        - defaultValue: admin
          description: The required role that the user must meet or exceed
          id: requiredRole
          label: requiredRole
          options:
            - label: Admin
              value: admin
            - label: Editor
              value: editor
            - label: Viewer
              value: viewer
          type: select
        - description: >-
            Payload path to full experience user object. Usually
            `experience.user`.
          id: user
          label: User Path
          required: true
          type: payloadPath
      outputCount: 2
      resultDescription: Returns `true` if the user's role meets or exceeds the required role.
      resultMode: optional
    customNodeSupports:
      - cloud
    description: >-
      Verifies a user's role meets or exceeds a required role. For example, a
      required role of "editor" will succeed for users with roles of "editor" or
      "admin", but will fail if the user's role is "viewer".
    exportHash: 97ea9ab416744feebf031a801d704da730cab56ad283ffa0a80bd73dc44e1b86
    flowClass: customNode
    globals: []
    id: ~exportplaceholderid-flow-cpfVerifyRole~
    name: 'CPF: Verify Role'
    nodes:
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: YrmyNtSXmj
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 60
          'y': 520
        outputIds: []
        type: CustomNodeCapNode
      - config:
          branchIndexTemplate: 1
          resultSourcePath: ''
        id: GgrY9WTU53
        meta:
          category: customNodeEnd
          description: Take the "True" path
          label: Output True
          name: custom-node-end-true
          x: 260
          'y': 520
        outputIds: []
        type: CustomNodeCapNode
      - config:
          scopePath: ''
          script: |-
            let roles = {
                admin: 0,
                editor: 1,
                viewer: 2
            };

            let userRole = payload.data.user.userTags.cpf_role;
            let requiredRole = payload.data.requiredRole;

            let userRoleIdx = roles[userRole];
            let requiredRoleIdx = roles[requiredRole];

            payload.working = { valid: userRoleIdx <= requiredRoleIdx };
        id: f9iyjtFl0O
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 160
          'y': 200
        outputIds:
          - - beC1jrrZ6W
        type: RawFunctionNode
      - config:
          expression: '{{working.valid}}'
        id: beC1jrrZ6W
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 160
          'y': 320
        outputIds:
          - - YrmyNtSXmj
          - - GgrY9WTU53
        type: ConditionalNode
    shortDescription: Verifies a user's role meets or exceeds a required role
    triggers:
      - config: {}
        key: customNodeStart
        meta:
          category: trigger
          description: The Custom Node fires here ...
          label: 'Start: CPF: Verify Role'
          name: customNodeStart
          uiId: SywHdN5P6W
          x: 160
          'y': 80
        outputIds:
          - - f9iyjtFl0O
        type: customNodeStart
version: 1
