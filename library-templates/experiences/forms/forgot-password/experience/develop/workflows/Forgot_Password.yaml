resourceType: ExperienceFlowVersion
resources:
  - description: Accepts a user's email address and generates a reset email.
    enabled: true
    flowId: ~exportplaceholderid-flow-forgotPassword-0~
    globals: []
    id: ~exportplaceholderid-flowVersion-forgotPassword-0~
    name: Forgot Password
    nodes:
      - config:
          algorithmTemplate: HS256
          dataTemplate: "{\n\t\"email\": \"{{working.user.email}}\",\n  \"id\": \"{{working.user.id}}\"\n}"
          dataTemplateType: json
          destinationPath: working.token
          expiresIn: 86400
          issuerTemplate: '{{globals.tl-jwt-reset-issuer}}'
          secretTemplate: '{{globals.tl-jwt-reset-secret}}'
        id: klWbG8QmSQ
        meta:
          category: logic
          description: >-
            Create a token, which we will use for resetting the user's password.
            You will need to set a "jwtSecret" global variable, which should be
            a random alphanumeric string that is 16 characters long.
          isExpRequired: true
          label: 'JWT: Create'
          name: jwt-create
          timeUnit: Days
          x: 680
          'y': 940
        outputIds:
          - - 5NHcvzsjj6
        type: JWTCreateNode
      - config:
          errorsPath: ''
          schema: "{\n\t\"type\": \"object\",\n  \"properties\": {\n    \"email\": {\n    \t\"type\": \"string\",\n      \"format\": \"email\"\n    }\n  },\n  \"required\": [\"email\"],\n  \"additionalProperties\": false\n}"
          schemaType: json
          toValidatePath: data.body
        id: h0sNv4dst3
        meta:
          category: logic
          description: Validate the data submitted in the post request.
          label: Validate Payload
          name: validate-payload
          x: 380
          'y': 180
        outputIds:
          - - ixJhnH6WXy
          - - Xy2d5BH0qz
        type: ValidatePayloadNode
      - config:
          bodyTemplate: |-
            {
              "error": "Not a valid email address."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-tlPageForgotPassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '401'
          sameSiteTemplate: ''
        id: ixJhnH6WXy
        meta:
          category: output
          description: An error occurred. Render the forgot password page with an error.
          label: Invalid Email
          mqttTopicsType: []
          name: endpoint-reply
          x: 280
          'y': 300
        outputIds:
          - - OfgH76b_kp
        type: EndpointReplyNode
      - config:
          emailOrIdTemplate: '{{data.body.email}}'
          findMetadata: false
          findMethod: emailOrId
          findMultiple: false
          resultPath: working.user
          sortDirection: asc
          sortField: email
        id: ikGzKlZ0c0
        meta:
          category: experience
          description: See if we have a user with the email address that was submitted.
          label: Get User
          name: get-experience-user
          x: 580
          'y': 740
        outputIds:
          - - sx3Zfchpxn
        type: GetExperienceUserNode
      - config:
          bodyTemplate: |-
            {
                "success" : true
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-tlPageForgotPassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: pVpcOAvu1o
        meta:
          category: output
          description: >-
            Render the forgot password page with a success message. The state of
            this page is the same whether we find a user or not.
          label: Success
          mqttTopicsType: []
          name: endpoint-reply
          x: 580
          'y': 520
        outputIds:
          - - ikGzKlZ0c0
        type: EndpointReplyNode
      - config:
          expression: '{{working.user}} !== null'
        id: sx3Zfchpxn
        meta:
          category: logic
          description: Did we find a user with that email address?
          label: User Found?
          name: conditional
          x: 580
          'y': 840
        outputIds:
          - - lAXi2lMXSB
          - - klWbG8QmSQ
        type: ConditionalNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>
                  <p><strong>Hi{{#if working.user.firstName}} {{working.user.firstName}}{{/if}},</strong></p>
                  <p>We received a request to reset your account password for {{data.headers.x-forwarded-proto}}://{{data.headers.host}}.</p>
                  <p>Click the link below to reset your password, or copy and paste it into your browser.</p>
                  <p><a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/reset-password?token={{working.token}}">{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/reset-password?token={{working.token}}</a></p>
                </div>
              </body>
            </html>
          fromTemplate: 'noreply@{{data.headers.host}}'
          resultPath: working.emailResult
          subjectTemplate: Request to Reset Password
          toAddresses:
            - '{{working.user.email}}'
        id: 5NHcvzsjj6
        meta:
          category: output
          description: >-
            Send an email to the user with a token for resetting the account
            password.
          label: Send Reset Email
          name: structure-email
          x: 680
          'y': 1040
        outputIds:
          - - Z-NJmGu_gQ
        type: StructureEmailNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>
                  <p><strong>Hello,</strong></p>
                  <p>We received a request to reset an account password for {{data.headers.x-forwarded-proto}}://{{data.headers.host}}. However, we could not find a user in our system matching that email address.</p>
                  <p>If you have an account, please <a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/login">sign in</a> or <a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/forgot-password">reset your password</a> using the email address that's currently associated with your account.</p>
                  <p>If you do not have an account, you can ignore this email.</p>
                </div>
              </body>
            </html>
          fromTemplate: 'noreply@{{data.headers.host}}'
          resultPath: working.emailResult
          subjectTemplate: Request to Reset Password
          toAddresses:
            - '{{data.body.email}}'
        id: lAXi2lMXSB
        meta:
          category: output
          description: >-
            Send an email to the address the user entered, stating that a
            password reset was requested but we couldn't find that user.
          label: No User Email
          name: structure-email
          x: 480
          'y': 1040
        outputIds:
          - - Z-NJmGu_gQ
        type: StructureEmailNode
      - config:
          message: ''
          property: ''
        id: OfgH76b_kp
        meta:
          category: output
          description: ''
          id: OfgH76b_kp
          label: Debug
          name: debug
          x: 280
          'y': 400
        outputIds: []
        type: DebugNode
      - config:
          message: ''
          property: ''
        id: Z-NJmGu_gQ
        meta:
          category: output
          description: ''
          id: Z-NJmGu_gQ
          label: Debug
          name: debug
          x: 580
          'y': 1180
        outputIds: []
        type: DebugNode
      - config: {}
        id: 0PiW9iujW3
        meta:
          annotationText: >-
            If the user does not exist, send an email to the address anyway.
            This lets them know a password request was sent, but an account does
            not exist for this address.
          category: annotation
          height: 200
          label: Note
          name: note
          width: 300
          x: 160
          'y': 1040
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: 54aZhxSqWL
        meta:
          annotationText: >-
            Generate a reset token that contains the user's ID and email. The
            token is signed by the `tl-jwt-reset-secret` and
            `tl-jwt-reset-issuer` in globals.
          category: annotation
          height: 180
          label: Note
          name: note
          width: 300
          x: 880
          'y': 940
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: wIYT6OQsbR
        meta:
          annotationText: >-
            This workflow expects a valid email address to be POSTed in the body
            of the request. If an email address does not exist, or is not
            formatted correctly, send the user back to the forgot password page
            with an error.
          category: annotation
          height: 180
          label: Note
          name: note
          width: 300
          x: 60
          'y': 80
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: nnlskELWAo
        meta:
          annotationText: >-
            Always send the user back to the forgot password page with a success
            message, even if the user does not exist. This prevents attackers
            from spamming this endpoint looking for valid email addresses.
          category: annotation
          height: 180
          label: Note
          name: note
          width: 300
          x: 780
          'y': 520
        outputIds: []
        type: AnnotationNode
      - config:
          expression: '{{globals.tl-jwt-reset-secret}} && {{globals.tl-jwt-reset-issuer}}'
        id: Xy2d5BH0qz
        meta:
          category: logic
          description: ''
          id: Xy2d5BH0qz
          label: Conditional
          name: conditional
          x: 480
          'y': 300
        outputIds:
          - - KoOPGZiIIc
          - - pVpcOAvu1o
        type: ConditionalNode
      - config: {}
        id: eCSkhOBeeN
        meta:
          annotationText: >-
            Make sure the application has the `tl-jwt-reset-secret` and
            `tl-jwt-reset-issuer` globals defined.
          category: annotation
          height: 140
          label: Note
          name: note
          width: 260
          x: 680
          'y': 300
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: |-
            {
              "error": "Missing application configuration. Ensure the 'tl-jwt-reset-secret' and 'tl-jwt-reset-issuer' global variables are defined."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-tlPageForgotPassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '401'
          sameSiteTemplate: ''
        id: KoOPGZiIIc
        meta:
          category: output
          description: An error occurred. Render the forgot password page with an error.
          label: Invalid Config
          mqttTopicsType: []
          name: endpoint-reply
          x: 380
          'y': 520
        outputIds:
          - - ywW3hnZmbC
        type: EndpointReplyNode
      - config:
          message: ''
          property: ''
        id: ywW3hnZmbC
        meta:
          category: output
          description: ''
          id: OfgH76b_kp
          label: Debug
          name: debug
          x: 380
          'y': 620
        outputIds: []
        type: DebugNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-postForgotPassword-1~
        meta:
          category: trigger
          description: When a user submits the forgot password form ...
          label: POST Forgot Password
          name: endpoint
          uiId: kjHf3pQdKq
          x: 380
          'y': 80
        outputIds:
          - - h0sNv4dst3
        type: endpoint
    version: develop
version: 1
