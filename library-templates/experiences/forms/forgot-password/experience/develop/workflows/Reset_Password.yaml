resourceType: ExperienceFlowVersion
resources:
  - description: >-
      Handles both the GET and POST reset password routes. Verifies the reset
      token and resets the user's password.
    enabled: true
    flowId: ~exportplaceholderid-flow-resetPassword-1~
    globals: []
    id: ~exportplaceholderid-flowVersion-resetPassword-1~
    name: Reset Password
    nodes:
      - config:
          bodyTemplate: |-
            {
                "email": {{jsonEncode working.decoded.email}}
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-tlPageResetPassword-1~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: ''
          sameSiteTemplate: ''
        id: t5O14KKlz5
        meta:
          category: output
          description: ''
          id: t5O14KKlz5
          label: Show Form
          mqttTopicsType: []
          name: endpoint-reply
          x: 260
          'y': 320
        outputIds:
          - - EbaS3GQAn1
        type: EndpointReplyNode
      - config:
          message: ''
          property: ''
        id: EbaS3GQAn1
        meta:
          category: output
          description: ''
          id: EbaS3GQAn1
          label: Debug
          name: debug
          x: 160
          'y': 440
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: /forgot-password?resetError=true
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: 7Da6xTHvKa
        meta:
          category: output
          description: ''
          id: 7Da6xTHvKa
          label: Redirect
          mqttTopicsType: []
          name: endpoint-reply
          x: 60
          'y': 320
        outputIds:
          - - EbaS3GQAn1
        type: EndpointReplyNode
      - config:
          customNodeId: ~exportplaceholderid-flow-verifyResetToken-2~
          customNodeVersion: develop
          fields:
            - id: token
              value: '{{data.query.token}}'
            - id: jwtSecret
              value: '{{globals.tl-jwt-reset-secret}}'
            - id: jwtIssuer
              value: '{{globals.tl-jwt-reset-issuer}}'
          resultPath: working.decoded
        id: ymsHLpf_N3
        meta:
          category: customNodeExecute
          customNodeId: ~exportplaceholderid-flow-verifyResetToken-2~
          description: ''
          id: ymsHLpf_N3
          label: Verify Reset Token
          name: custom-node-execute-node
          x: 160
          'y': 180
        outputIds:
          - - 7Da6xTHvKa
          - - t5O14KKlz5
        type: CustomNodeExecuteNode
      - config:
          customNodeId: ~exportplaceholderid-flow-verifyResetToken-2~
          customNodeVersion: develop
          fields:
            - id: token
              value: '{{data.query.token}}'
            - id: jwtSecret
              value: '{{globals.tl-jwt-reset-secret}}'
            - id: jwtIssuer
              value: '{{globals.tl-jwt-reset-issuer}}'
          resultPath: working.decoded
        id: YtSwCM9FHz
        meta:
          category: customNodeExecute
          customNodeId: ~exportplaceholderid-flow-verifyResetToken-2~
          description: ''
          id: ymsHLpf_N3
          label: Verify Reset Token
          name: custom-node-execute-node
          x: 160
          'y': 680
        outputIds:
          - - 1T-58NxkO9
          - - fPCvGvYQqB
        type: CustomNodeExecuteNode
      - config:
          message: ''
          property: ''
        id: q1X7pFN1w0
        meta:
          category: output
          description: ''
          id: EbaS3GQAn1
          label: Debug
          name: debug
          x: 60
          'y': 900
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: /forgot-password?resetError=true
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: 1T-58NxkO9
        meta:
          category: output
          description: ''
          id: 7Da6xTHvKa
          label: Redirect
          mqttTopicsType: []
          name: endpoint-reply
          x: 60
          'y': 800
        outputIds:
          - - q1X7pFN1w0
        type: EndpointReplyNode
      - config:
          expression: '{{data.body.email}} === {{working.decoded.email}}'
        id: Eq4hm3_K7p
        meta:
          category: logic
          description: >-
            Check to make sure the email in the post body matches the email on
            the token. If not, throw an error.
          label: Token / Submission Match?
          name: conditional
          x: 560
          'y': 900
        outputIds:
          - - TtPtMnt8Ax
          - - Ncc1u39sJl
        type: ConditionalNode
      - config:
          errorsPath: ''
          schema: "{\n\t\"type\": \"object\",\n  \"properties\": {\n    \"email\": {\n    \t\"type\": \"string\",\n      \"format\": \"email\"\n    },\n    \"password\": {\n    \t\"type\": \"string\",\n      \"minLength\": 8,\n      \"maxLength\": 255\n    }\n  },\n  \"required\": [\"email\", \"password\"],\n  \"additionalProperties\": false\n}"
          schemaType: json
          toValidatePath: data.body
        id: fPCvGvYQqB
        meta:
          category: logic
          description: Validate the data submitted in the post request.
          label: Validate Payload
          name: validate-payload
          x: 360
          'y': 800
        outputIds:
          - - cKUum_FTF-
          - - Eq4hm3_K7p
        type: ValidatePayloadNode
      - config:
          dataMethod: individualFields
          emailOrIdTemplate: '{{working.decoded.id}}'
          emailTemplate: ''
          firstNameTemplate: ''
          invalidateExistingTokens: false
          lastNameTemplate: ''
          passwordTemplate: '{{data.body.password}}'
          resultPath: working.user
          userTags: []
        id: Ncc1u39sJl
        meta:
          category: experience
          description: Set the new password and invalidate any existing tokens.
          label: Update User
          name: update-experience-user
          x: 660
          'y': 1000
        outputIds:
          - - irIZpbOEPA
        type: UpdateExperienceUserNode
      - config:
          emailOrIdTemplate: '{{working.user.id}}'
          invalidateExistingTokens: true
          resultPath: working.authToken
          ttlTemplate: ''
        id: irIZpbOEPA
        meta:
          category: experience
          description: >-
            Password was successfully changed. Generate a new auth token for the
            user and invalidate any existing tokens.
          label: Generate Token
          name: experience-user-token
          x: 660
          'y': 1100
        outputIds:
          - - wghqgvjDIr
        type: ExperienceUserTokenNode
      - config:
          bodyTemplate: /
          bodyTemplateType: string
          cookieInfo:
            - maxAgeTemplate: ''
              nameTemplate: authorization
              pathTemplate: ''
              valueTemplate: '{{working.authToken}}'
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: wghqgvjDIr
        meta:
          category: output
          description: >-
            Redirect the user to the home page and set the new token as a
            cookie.
          label: Redirect to /
          mqttTopicsType: []
          name: endpoint-reply
          x: 660
          'y': 1200
        outputIds:
          - - XKbCXn-4lW
        type: EndpointReplyNode
      - config:
          message: ''
          property: ''
        id: XKbCXn-4lW
        meta:
          category: output
          description: ''
          id: EbaS3GQAn1
          label: Debug
          name: debug
          x: 660
          'y': 1300
        outputIds: []
        type: DebugNode
      - config: {}
        id: HjrS4szQ9u
        meta:
          annotationText: >-
            On an invalid token, redirect them back to the Forgot Password page
            with an error message.


            If the token is valid, render the reset form and send it the email
            address encoded in the token.
          category: annotation
          height: 220
          label: Note
          name: note
          width: 380
          x: 460
          'y': 180
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: iHhNGuYjj0
        meta:
          annotationText: |-
            Render the Reset Password form again, with an error, if:  
            1. The email or password are invalid.  
            2. The provided email does not match the token's email.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 280
          x: 760
          'y': 800
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: b7jiQa1x1P
        meta:
          annotationText: >-
            Update the user with the new password. Generate a new authentication
            token. Set that token on a cookie and redirect them to the home page
            (`/`).
          category: annotation
          height: 260
          label: Note
          name: note
          width: 260
          x: 860
          'y': 1000
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: |-
            {
                "email": {{jsonEncode data.body.email}},
                "error": "Invalid email or password. Password must be at least 8 characters long."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-tlPageResetPassword-1~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '400'
          sameSiteTemplate: ''
        id: cKUum_FTF-
        meta:
          category: output
          description: ''
          id: t5O14KKlz5
          label: Show Form
          mqttTopicsType: []
          name: endpoint-reply
          x: 260
          'y': 900
        outputIds:
          - - z_unPvYPMV
        type: EndpointReplyNode
      - config:
          message: ''
          property: ''
        id: z_unPvYPMV
        meta:
          category: output
          description: ''
          id: EbaS3GQAn1
          label: Debug
          name: debug
          x: 260
          'y': 1000
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: |-
            {
                "email": {{jsonEncode data.body.email}},
                "error": "Email address does not match address in reset token."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-tlPageResetPassword-1~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '400'
          sameSiteTemplate: ''
        id: TtPtMnt8Ax
        meta:
          category: output
          description: ''
          id: t5O14KKlz5
          label: Show Form
          mqttTopicsType: []
          name: endpoint-reply
          x: 460
          'y': 1000
        outputIds:
          - - pFw9S1u1xD
        type: EndpointReplyNode
      - config:
          message: ''
          property: ''
        id: pFw9S1u1xD
        meta:
          category: output
          description: ''
          id: EbaS3GQAn1
          label: Debug
          name: debug
          x: 460
          'y': 1100
        outputIds: []
        type: DebugNode
      - config: {}
        id: 19c4g2ymhw
        meta:
          annotationText: >-
            On an invalid token, redirect them back to the Forgot Password page
            with an error message.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 380
          x: 380
          'y': 560
        outputIds: []
        type: AnnotationNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-getResetPassword-2~
        meta:
          category: trigger
          description: ''
          id: apLxJ53JOz
          label: GET Reset Password
          name: endpoint
          uiId: apLxJ53JOz
          x: 160
          'y': 60
        outputIds:
          - - ymsHLpf_N3
        type: endpoint
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-postResetPassword-3~
        meta:
          category: trigger
          description: ''
          id: hVQAvJB1rg
          label: POST Reset Password
          name: endpoint
          uiId: hVQAvJB1rg
          x: 160
          'y': 560
        outputIds:
          - - YtSwCM9FHz
        type: endpoint
    version: develop
version: 1
