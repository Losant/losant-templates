resourceType: ExperienceFlowVersion
resources:
  - description: >-
      Displays the Change Password page, accepts and validates user input,
      updates the user's profile, and displays feedback on completion.
    enabled: true
    flowId: ~exportplaceholderid-flow-getPostTlChangePassword-0~
    globals:
      - json: 'true'
        key: requireStrongPassword
      - json: '"^(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.*[0-9])(?=.*[a-z]).{12,}$"'
        key: strongPasswordRegExp
      - json: >-
          "Passwords must have a minimum of 12 characters, including at least
          one uppercase letter, one lowercase letter, one number, and one
          special character."
        key: strongPasswordExplanation
    id: ~exportplaceholderid-flowVersion-getPostTlChangePassword-0~
    name: ' GET & POST /tl-change-password'
    nodes:
      - config:
          bodyTemplate: pageData
          bodyTemplateType: path
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-changePassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '{{#if pageData.device}}200{{else}}404{{/if}}'
          sameSiteTemplate: ''
        id: aCy9lr_xhT
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 940
          'y': 1620
        outputIds: []
        type: EndpointReplyNode
      - config:
          errorsPath: working.submissionErrors
          schema: |-
            {
                "type": "object",
                "properties": {
                    "currentPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        {{#if globals.requireStrongPassword}}"pattern": {{{jsonEncode globals.strongPasswordRegExp}}},{{/if}}
                        "type": "string",
                        "minLength": 8
                    },
                    "newPasswordAgain": {
                        "type": "string"
                    }
                },
                "required": ["currentPassword", "newPassword"],
                "additionalProperties": false
            }
          schemaType: json
          toValidatePath: data.body
        id: ojIq6y323q
        meta:
          category: logic
          description: ''
          label: Validate Payload
          name: validate-payload
          x: 540
          'y': 160
        outputIds:
          - - tVnG6Jco2i
          - - QWhMPCttNN
        type: ValidatePayloadNode
      - config:
          bodyTemplate: |-
            {
                "success": true
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-changePassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: JQGsVJ8UWo
        meta:
          category: output
          description: ''
          label: Success
          mqttTopicsType: []
          name: endpoint-reply
          x: 940
          'y': 560
        outputIds:
          - - jmCgM9kHLq
        type: EndpointReplyNode
      - config:
          bodyTemplate: |-
            {
                "error": "New password is not valid."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-changePassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '400'
          sameSiteTemplate: ''
        id: tVnG6Jco2i
        meta:
          category: output
          description: ''
          label: Invalid Request
          mqttTopicsType: []
          name: endpoint-reply
          x: 340
          'y': 560
        outputIds:
          - - jmCgM9kHLq
        type: EndpointReplyNode
      - config:
          message: ''
          property: ''
        id: jmCgM9kHLq
        meta:
          category: output
          description: ''
          label: Debug
          name: debug
          x: 540
          'y': 660
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: |-
            {
                "error": {{jsonEncode working.updateResult.error.message}}
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-changePassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '500'
          sameSiteTemplate: ''
        id: 6pkdtH6jqp
        meta:
          category: output
          description: ''
          label: Update Failed
          mqttTopicsType: []
          name: endpoint-reply
          x: 740
          'y': 560
        outputIds:
          - - jmCgM9kHLq
        type: EndpointReplyNode
      - config:
          bodyTemplateType: none
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-changePassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: vX0gHqaMTo
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 140
          'y': 560
        outputIds:
          - - jmCgM9kHLq
        type: EndpointReplyNode
      - config: {}
        id: kmbKrhNKsI
        meta:
          annotationText: >-
            We use the workflow engine to reply to the GET request so that the
            password-related global variables are available to the page
            renderer.
          category: annotation
          height: 180
          label: Note
          name: note
          width: 220
          x: 260
          'y': 140
        outputIds: []
        type: AnnotationNode
      - config:
          emailTemplate: '{{experience.user.email}}'
          invalidateExistingTokens: false
          passwordTemplate: '{{data.body.currentPassword}}'
          tokenResultPath: ''
          ttlTemplate: ''
          userResultPath: working.authenticateResult
        id: QWhMPCttNN
        meta:
          authMode: emailPassword
          category: experience
          description: ''
          label: Authenticate
          name: experience-user-auth
          x: 640
          'y': 260
        outputIds:
          - - igVaZKvQCm
          - - d8BFYUduH2
        type: ExperienceUserAuthNode
      - config:
          bodyTemplate: |-
            {
                "error": "Current password is incorrect."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-changePassword-0~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '400'
          sameSiteTemplate: ''
        id: igVaZKvQCm
        meta:
          category: output
          description: ''
          label: Current Password Incorrect
          mqttTopicsType: []
          name: endpoint-reply
          x: 540
          'y': 560
        outputIds:
          - - jmCgM9kHLq
        type: EndpointReplyNode
      - config:
          dataMethod: individualFields
          emailOrIdTemplate: '{{experience.user.email}}'
          emailTemplate: ''
          firstNameTemplate: ''
          invalidateExistingTokens: false
          lastNameTemplate: ''
          passwordTemplate: '{{data.body.newPassword}}'
          resultPath: working.updateResult
          userTags: []
        id: d8BFYUduH2
        meta:
          category: experience
          description: ''
          label: 'User: Update'
          name: update-experience-user
          x: 760
          'y': 360
        outputIds:
          - - YgJrXDzbZ_
        type: UpdateExperienceUserNode
      - config:
          expression: '{{working.updateResult.id}}'
        id: YgJrXDzbZ_
        meta:
          category: logic
          description: ''
          label: Success?
          name: conditional
          x: 840
          'y': 460
        outputIds:
          - - 6pkdtH6jqp
          - - JQGsVJ8UWo
        type: ConditionalNode
      - config: {}
        id: 48oGpj1E7m
        meta:
          annotationText: >-
            Ensure that the user submitted a current password and a **valid**
            new password. We do **not** check here that the two password fields
            match; that is only for user convenience in the interface.
          category: annotation
          height: 140
          label: Note
          name: note
          width: 400
          x: 780
          'y': 60
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: 0afMOOGIdT
        meta:
          annotationText: >-
            Verify that the submitted current password is correct. If not, fail
            the request.
          category: annotation
          height: 100
          label: Note
          name: note
          width: 400
          x: 840
          'y': 240
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: l6dfOYPzTc
        meta:
          annotationText: >-
            Attempt to update the user's password. If it succeeds, reply with a
            200 response code and a success message. If it fails (which it never
            should if it reaches this point), reply with a 500 response code.
          category: annotation
          height: 140
          label: Note
          name: note
          width: 400
          x: 1040
          'y': 380
        outputIds: []
        type: AnnotationNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-postTlChangePassword-1~
        meta:
          category: trigger
          description: ''
          label: POST /tl-change-password
          name: endpoint
          uiId: Ix3XeRXXoy
          x: 540
          'y': 60
        outputIds:
          - - ojIq6y323q
        type: endpoint
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-getTlChangePassword-0~
        meta:
          category: trigger
          description: ''
          label: GET /tl-change-password
          name: endpoint
          uiId: AzPRxMqSGB
          x: 140
          'y': 60
        outputIds:
          - - vX0gHqaMTo
        type: endpoint
    version: develop
version: 1
