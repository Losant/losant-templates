resourceType: ExperienceFlowVersion
resources:
  - description: Created for Endpoint GET /admin/device-tags
    enabled: true
    exportHash: ef47cc6d72dea770a4012c0f642d3045a3eb904dafce167e9c56cabed9377110
    flowId: ~exportplaceholderid-flow-cpfPageAdminDeviceTags~
    globals: []
    id: ~exportplaceholderid-flowVersion-cpfPageAdminDeviceTags~
    name: cpf-page-admin-device-tags
    nodes:
      - config:
          level: verbose
          message: ''
          property: ''
        id: 4l3NjjfsG_
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 220
          'y': 1100
        outputIds: []
        type: DebugNode
      - config:
          action: get
          params:
            - name: sortField
              type: string
              value: name
            - name: sortDirection
              type: string
              value: asc
            - name: page
              type: string
              value: '0'
            - name: perPage
              type: string
              value: '1000'
            - name: filterField
              type: string
              value: ''
            - name: filter
              type: string
              value: ''
            - name: tagsAsObject
              type: string
              value: ''
            - name: attributesAsObject
              type: string
              value: ''
          resource: deviceRecipes
          responsePath: working.deviceRecipes
        id: tLsuul4_wC
        meta:
          category: data
          description: ''
          label: Get Recipes
          name: losantapi
          x: 220
          'y': 400
        outputIds:
          - - cKkhAj_fjj
        type: LosantApiNode
      - config:
          rules:
            - destination: pageData.deviceRecipes
              type: set
              valueTemplate: |-
                [
                  {
                    "name": "__default__",
                    "id": "__default__"
                  }
                ]
              valueTemplateType: json
        id: 6nscWvIDfM
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 220
          'y': 700
        outputIds:
          - - f7Q_7l_U_7
        type: MutateNode
      - config:
          destArrayPath: pageData.deviceRecipes
          rules:
            - inputTemplate: '{{working.deviceRecipes.result.items}}'
              type: concat
          sourceArrayPath: pageData.deviceRecipes
        id: f7Q_7l_U_7
        meta:
          category: logic
          description: ''
          label: Array
          name: array
          x: 220
          'y': 800
        outputIds:
          - - VJ21XgDpzn
        type: ArrayNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: Ge4X3mg7Li
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 780
          'y': 800
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: '{{path}}?success=true'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: kADesjOjSn
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 780
          'y': 700
        outputIds:
          - - Ge4X3mg7Li
        type: EndpointReplyNode
      - config:
          dataTableIdTemplate: ~exportplaceholderid-dataTable-cpfDeviceTags~
          limitTemplate: ''
          queryTemplate: '{"$or":[]}'
          resultPath: working.deleteResult
        id: hOtcnNNJDk
        meta:
          category: data
          description: ''
          label: 'Table: Delete Rows'
          name: delete-table-row
          x: 780
          'y': 400
        outputIds:
          - - ZCzbczj3CP
        type: DataTableDeleteRowNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfGetTenancyLevel~
          customNodeVersion: default
          fields:
            - id: user
              value: experience.user
          isInstance: false
          resultPath: pageData.userLevel
        id: yI4Rpy0bSp
        meta:
          category: experience
          description: ''
          label: 'CPF: Get Tenancy Level'
          name: custom-node-execute-node
          x: 680
          'y': 160
        outputIds:
          - - W5vFAyCA3a
          - - HGvd_6WcDy
        type: CustomNodeExecuteNode
      - config:
          expression: '{{pageData.userLevel}} == 0'
        id: HGvd_6WcDy
        meta:
          category: logic
          description: ''
          label: Sys Admin?
          name: conditional
          x: 780
          'y': 280
        outputIds:
          - - W5vFAyCA3a
          - - hOtcnNNJDk
        type: ConditionalNode
      - config:
          bodyTemplate: /
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: W5vFAyCA3a
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 580
          'y': 400
        outputIds:
          - - ousIeEX5Up
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: ousIeEX5Up
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 580
          'y': 500
        outputIds: []
        type: DebugNode
      - config:
          scopePath: ''
          script: |-
            let rows = [];
            let body = payload.data.body;

            for (const [key, value] of Object.entries(body)) {
                rows.push({
                    "deviceRecipeName": key,
                    "deviceTagKeys": value ? JSON.stringify(value.split(',').map((s) => { return s.trim() })) : "[]"
                });
            }

            payload.working.rows = rows;
        id: ZCzbczj3CP
        meta:
          category: logic
          description: ''
          label: Function
          name: function
          x: 780
          'y': 500
        outputIds:
          - - mXzBtuOUZO
        type: RawFunctionNode
      - config:
          dataMethod: payloadPath
          dataTableIdTemplate: ~exportplaceholderid-dataTable-cpfDeviceTags~
          resultPath: working.insertResult
          rowPayloadPath: working.rows
        id: mXzBtuOUZO
        meta:
          category: data
          description: ''
          label: 'Table: Insert Rows'
          name: insert-table-row
          x: 780
          'y': 600
        outputIds:
          - - kADesjOjSn
        type: DataTableInsertRowNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfGetTenancyLevel~
          customNodeVersion: default
          fields:
            - id: user
              value: experience.user
          isInstance: false
          resultPath: pageData.userLevel
        id: 20C8miw0Jr
        meta:
          category: experience
          description: ''
          label: 'CPF: Get Tenancy Level'
          name: custom-node-execute-node
          x: 120
          'y': 160
        outputIds:
          - - INXRs3vVRP
          - - Q5nqvTd8fM
        type: CustomNodeExecuteNode
      - config:
          expression: '{{pageData.userLevel}} == 0'
        id: Q5nqvTd8fM
        meta:
          category: logic
          description: ''
          label: Sys Admin?
          name: conditional
          x: 220
          'y': 280
        outputIds:
          - - INXRs3vVRP
          - - tLsuul4_wC
        type: ConditionalNode
      - config:
          bodyTemplate: /
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: INXRs3vVRP
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 20
          'y': 400
        outputIds:
          - - 5iibZBaywY
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: 5iibZBaywY
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 20
          'y': 500
        outputIds: []
        type: DebugNode
      - config:
          dataTableIdTemplate: ~exportplaceholderid-dataTable-cpfDeviceTags~
          includeFieldsTemplate: 'deviceRecipeName,deviceTagKeys'
          limitTemplate: '1000'
          offsetTemplate: ''
          queryTemplate: ''
          resultPath: working.tableRows
          sortColumnTemplate: ''
          sortDirectionTemplate: ''
        id: cKkhAj_fjj
        meta:
          category: data
          description: ''
          label: 'Table: Get Rows'
          name: get-table-rows
          x: 220
          'y': 500
        outputIds:
          - - jeAlIFwCgC
        type: DataTableQueryNode
      - config:
          rules:
            - inputTemplate: deviceRecipeName
              outputPath: working.tableRows
              type: keyBy
          sourceArrayPath: working.tableRows.items
        id: jeAlIFwCgC
        meta:
          category: logic
          description: ''
          label: Array
          name: array
          x: 220
          'y': 600
        outputIds:
          - - 6nscWvIDfM
        type: ArrayNode
      - config:
          currentItemPath: working.thisRecipe
          loopSourcePath: pageData.deviceRecipes
          mapResultPath: pageData.deviceRecipes
          parallel: true
        id: VJ21XgDpzn
        meta:
          category: logic
          description: ''
          groupStartX: 200
          groupStartY: 200
          label: Loop
          name: loop
          x: 220
          'y': 900
        outputIds:
          - - srNzByvVqY
          - - q9S3bRo1vp
        type: LoopNode
      - config:
          loopNodeId: VJ21XgDpzn
          mapValuePath: working.thisRecipe.value
          shouldBreak: false
        id: 5nKy4CRtbY
        meta:
          category: loop
          description: ''
          groupId: VJ21XgDpzn
          label: Return
          name: loop-return
          x: 200
          'y': 400
        outputIds: []
        type: LoopCapNode
      - config:
          rules:
            - destination: working.thisRecipe.value.deviceTagKeys
              type: set
              valueTemplate: >-
                {{{defaultTo (lookup (lookup working.tableRows
                working.thisRecipe.value.name) 'deviceTagKeys') "[]"}}}
              valueTemplateType: json
        id: q9S3bRo1vp
        meta:
          category: logic
          description: ''
          groupId: VJ21XgDpzn
          label: Mutate
          name: mutate
          x: 200
          'y': 300
        outputIds:
          - - 5nKy4CRtbY
        type: MutateNode
      - config:
          bodyTemplate: pageData
          bodyTemplateType: path
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfPageAdminDeviceTags~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: srNzByvVqY
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 220
          'y': 1000
        outputIds:
          - - 4l3NjjfsG_
        type: EndpointReplyNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-getAdminDeviceTags~
        meta:
          category: trigger
          description: ''
          label: GET /admin/device-tags
          name: endpoint
          uiId: oH039BJkZQ
          x: 120
          'y': 60
        outputIds:
          - - 20C8miw0Jr
        type: endpoint
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-postAdminDeviceTags~
        meta:
          category: trigger
          description: ''
          label: POST /admin/device-tags
          name: endpoint
          uiId: XcLBgE99lB
          x: 680
          'y': 60
        outputIds:
          - - yI4Rpy0bSp
        type: endpoint
    version: develop
version: 1
