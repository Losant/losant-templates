resourceType: ExperienceFlowVersion
resources:
  - description: Accepts a user's email address and generates a reset email.
    enabled: true
    exportHash: ffba4181329be3f8a0dde5ec04867d89954bd9f7e8f30cb7c0150424dc34c7d9
    flowId: ~exportplaceholderid-flow-cpfPageForgotPassword~
    globals: []
    id: ~exportplaceholderid-flowVersion-cpfPageForgotPassword~
    name: cpf-page-forgot-password
    nodes:
      - config:
          errorsPath: ''
          schema: "{\n\t\"type\": \"object\",\n  \"properties\": {\n    \"email\": {\n    \t\"type\": \"string\",\n      \"format\": \"email\"\n    }\n  },\n  \"required\": [\"email\"],\n  \"additionalProperties\": false\n}"
          schemaType: json
          toValidatePath: data.body
        id: taoRMtDnfm
        meta:
          category: logic
          description: Validate the data submitted in the post request.
          label: Validate Payload
          name: validate-payload
          x: 360
          'y': 140
        outputIds:
          - - kPogGQTmao
          - - JbwXxjjV2Q
        type: ValidatePayloadNode
      - config:
          bodyTemplate: /forgot-password?error=Invalid email address provided.
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: kPogGQTmao
        meta:
          category: output
          description: An error occurred. Render the forgot password page with an error.
          label: Invalid Email
          mqttTopicsType: []
          name: endpoint-reply
          x: 260
          'y': 260
        outputIds:
          - - iaAr7uxmKY
        type: EndpointReplyNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>
                  <p><strong>Hi{{#if working.user.firstName}} {{working.user.firstName}}{{/if}},</strong></p>
                  <p>We received a request to reset your account password for {{data.headers.x-forwarded-proto}}://{{data.headers.host}}.</p>
                  <p>Click the link below to reset your password, or copy and paste it into your browser.</p>
                  <p><a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/reset-password?token={{working.token}}">{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/reset-password?token={{working.token}}</a></p>
                </div>
              </body>
            </html>
          fromTemplate: ''
          resultPath: working.emailResult
          subjectTemplate: '[{{globals.company_name}}] Request to Reset Password'
          toAddresses:
            - '{{working.user.email}}'
        id: NcsJUUod_J
        meta:
          category: output
          description: >-
            Send an email to the user with a token for resetting the account
            password.
          label: Send Reset Email
          name: structure-email
          x: 560
          'y': 560
        outputIds:
          - - STDVaKMWYe
        type: StructureEmailNode
      - config:
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>
                  <p><strong>Hello,</strong></p>
                  <p>We received a request to reset an account password for {{data.headers.x-forwarded-proto}}://{{data.headers.host}}. However, we could not find a user in our system matching that email address.</p>
                  <p>If you have an account, please <a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/login">sign in</a> or <a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/forgot-password">reset your password</a> using the email address that's currently associated with your account.</p>
                  <p>If you do not have an account, you can ignore this email.</p>
                </div>
              </body>
            </html>
          fromTemplate: ''
          resultPath: working.emailResult
          subjectTemplate: '[{{globals.company_name}}] Request to Reset Password'
          toAddresses:
            - '{{data.body.email}}'
        id: VZ1ABR1KfV
        meta:
          category: output
          description: >-
            Send an email to the address the user entered, stating that a
            password reset was requested but we couldn't find that user.
          label: No User Email
          name: structure-email
          x: 360
          'y': 560
        outputIds:
          - - gB3Z3JBj9V
        type: StructureEmailNode
      - config:
          level: warn
          message: ''
          property: ''
        id: iaAr7uxmKY
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 260
          'y': 360
        outputIds: []
        type: DebugNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: STDVaKMWYe
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 560
          'y': 660
        outputIds:
          - - oeuuYir1Op
        type: DebugNode
      - config: {}
        id: kyAmaZkKkW
        meta:
          annotationText: >-
            If the user does not exist, send an email to the address anyway.
            This lets them know a password request was sent, but an account does
            not exist for this address.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 300
          x: 40
          'y': 560
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: ljG1GLGB9B
        meta:
          annotationText: 'If the user exists, send the JWT created above to them via email.'
          category: annotation
          height: 100
          label: Note
          name: note
          width: 300
          x: 760
          'y': 540
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: hGM5RgLFWf
        meta:
          annotationText: >-
            This workflow expects a valid email address to be POSTed in the body
            of the request. If an email address does not exist, or is not
            formatted correctly, send the user back to the forgot password page
            with an error.
          category: annotation
          height: 180
          label: Note
          name: note
          width: 300
          x: 40
          'y': 40
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: n9B6KG4g6A
        meta:
          annotationText: >-
            Always send the user back to the forgot password page with a success
            message, even if the user does not exist. This prevents attackers
            from spamming this endpoint looking for valid email addresses.
          category: annotation
          height: 140
          label: Note
          name: note
          width: 380
          x: 680
          'y': 740
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: tzR21Urlb6
        meta:
          annotationText: >-
            Make sure the application has the `User Password Reset` JWT Service
            Credential defined.


            If not, the JWT: Create Node will error, causing the Workflow Error
            Trigger to fire and return a message about missing configuration to
            the user.
          category: annotation
          height: 180
          label: Note
          name: note
          width: 380
          x: 660
          'y': 40
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: >-
            /forgot-password?error={{encodeURIComponent
            data.errorInfo.error.message}}&email={{data.erroredPayload.data.body.email}}
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: H49MqGRiZd
        meta:
          category: output
          description: An error occurred. Render the forgot password page with an error.
          label: Invalid Config
          mqttTopicsType: []
          name: endpoint-reply
          x: 1060
          'y': 140
        outputIds:
          - - Vx3yAhAfip
        type: EndpointReplyNode
      - config:
          level: error
          message: ''
          property: ''
        id: Vx3yAhAfip
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 1060
          'y': 240
        outputIds: []
        type: DebugNode
      - config:
          level: warn
          message: ''
          property: ''
        id: gB3Z3JBj9V
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 360
          'y': 660
        outputIds:
          - - oeuuYir1Op
        type: DebugNode
      - config:
          attachments: []
          bccAddresses: []
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>
                  <p><strong>Hi{{#if working.user.firstName}} {{working.user.firstName}}{{/if}},</strong></p>
                  <p>We received a request to reset your account password for {{data.headers.x-forwarded-proto}}://{{data.headers.host}}.</p>
                  <p>Click the link below to reset your password, or copy and paste it into your browser.</p>
                  <p><a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/reset-password?token={{working.token}}">{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/reset-password?token={{working.token}}</a></p>
                </div>
              </body>
            </html>
          ccAddresses: []
          credentialNameTemplate: SendGrid Token
          fromTemplate: my-from-address@example.com
          replyToTemplate: ''
          resultPath: working.emailResult
          subjectTemplate: '[{{globals.company_name}}] Request to Reset Password'
          toAddresses:
            - '{{working.user.email}}'
        id: _Ibe3mSYij
        meta:
          category: output
          description: >-
            Send an email to the user with a token for resetting the account
            password.
          label: Send Reset Email
          name: sendgrid
          x: 560
          'y': 1220
        outputIds: []
        type: SendgridEmailNode
      - config:
          attachments: []
          bccAddresses: []
          bodyTemplate: |
            <!doctype html>
            <html>
              <head>
                <title></title>
                <meta name="viewport" content="width=device-width" />
                <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
              </head>
              <body>
                <div>
                  <p><strong>Hello,</strong></p>
                  <p>We received a request to reset an account password for {{data.headers.x-forwarded-proto}}://{{data.headers.host}}. However, we could not find a user in our system matching that email address.</p>
                  <p>If you have an account, please <a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/login">sign in</a> or <a href="{{data.headers.x-forwarded-proto}}://{{data.headers.host}}/forgot-password">reset your password</a> using the email address that's currently associated with your account.</p>
                  <p>If you do not have an account, you can ignore this email.</p>
                </div>
              </body>
            </html>
          ccAddresses: []
          credentialNameTemplate: SendGrid Token
          fromTemplate: my-from-address@example.com
          replyToTemplate: ''
          resultPath: working.emailResult
          subjectTemplate: '[{{globals.company_name}}] Request to Reset Password'
          toAddresses:
            - '{{data.body.email}}'
        id: C3I69usnup
        meta:
          category: output
          description: >-
            Send an email to the address the user entered, stating that a
            password reset was requested but we couldn't find that user.
          label: No User Email
          name: sendgrid
          x: 360
          'y': 1220
        outputIds: []
        type: SendgridEmailNode
      - config: {}
        id: qnA8hAuvFm
        meta:
          annotationText: >-
            ### Switch to SendGrid


            We **STRONGLY** recommend [creating a SendGrid
            account](https://sendgrid.com) for sending emails in your production
            application. These nodes can replace the two Email Nodes above with
            the following changes:


            1. Create a SendGrid Service Credential to hold your API token. Name
            it `SendGrid Token` - or, if you choose a different name, change the
            name of the credential in these nodes.

            2. Change the "From Address Template" to an email address associated
            with your SendGrid account.
          category: annotation
          height: 360
          label: Note
          name: note
          width: 580
          x: 260
          'y': 960
        outputIds: []
        type: AnnotationNode
      - config:
          emailOrIdTemplate: '{{data.body.email}}'
          findMetadata: false
          findMethod: emailOrId
          findMultiple: false
          resultPath: working.user
          sortDirection: asc
          sortField: email
        id: JbwXxjjV2Q
        meta:
          category: experience
          description: See if we have a user with the email address that was submitted.
          label: Get User
          name: get-experience-user
          x: 460
          'y': 260
        outputIds:
          - - ee0AsAqMz4
        type: GetExperienceUserNode
      - config:
          expression: '{{working.user}} !== null'
        id: Nix4bmS7Ej
        meta:
          category: logic
          description: Did we find a user with that email address?
          label: User Found?
          name: conditional
          x: 460
          'y': 460
        outputIds:
          - - VZ1ABR1KfV
          - - NcsJUUod_J
        type: ConditionalNode
      - config:
          bodyTemplate: /forgot-password?success=true
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '301'
          sameSiteTemplate: ''
        id: oeuuYir1Op
        meta:
          category: output
          description: >-
            Render the forgot password page with a success message. The state of
            this page is the same whether we find a user or not.
          label: Success
          mqttTopicsType: []
          name: endpoint-reply
          x: 460
          'y': 760
        outputIds: []
        type: EndpointReplyNode
      - config:
          credentialNameTemplate: User Password Reset
          dataTemplate: "{\n\t\"email\": \"{{working.user.email}}\",\n  \"id\": \"{{working.user.id}}\"\n}"
          dataTemplateType: json
          destinationPath: working.token
          expiresIn: 86400
          headerTemplate: ''
          headerTemplateType: json
        id: ee0AsAqMz4
        meta:
          category: logic
          description: >-
            Create a token, which we will use for resetting the user's password.
            You will need to set a "jwtSecret" global variable, which should be
            a random alphanumeric string that is 16 characters long.
          isExpRequired: true
          label: 'JWT: Create'
          name: jwt-create
          timeUnit: Days
          x: 460
          'y': 360
        outputIds:
          - - Nix4bmS7Ej
        type: JWTCreateNode
      - config: {}
        id: 6TVF5Q4B6Z
        meta:
          annotationText: >-
            By creating the JWT here, instead of only when we find a matching
            user, we can catch more scenarios where the Service Credential is
            not configured.
          category: annotation
          height: 140
          label: Note
          name: note
          width: 400
          x: 660
          'y': 320
        outputIds: []
        type: AnnotationNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-postForgotPassword~
        meta:
          category: trigger
          description: When a user submits the forgot password form ...
          label: POST Forgot Password
          name: endpoint
          uiId: ECHThcHDN1
          x: 360
          'y': 40
        outputIds:
          - - taoRMtDnfm
        type: endpoint
      - config:
          scope: local
        key: ~exportplaceholderid-flow-cpfPageForgotPassword~-flowError
        meta:
          category: trigger
          description: ''
          label: Workflow Error
          name: flowError
          uiId: C8iQdGxdmm
          x: 1060
          'y': 40
        outputIds:
          - - H49MqGRiZd
        type: flowError
    version: develop
version: 1
