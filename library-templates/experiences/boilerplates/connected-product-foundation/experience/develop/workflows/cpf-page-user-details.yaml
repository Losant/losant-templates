resourceType: ExperienceFlowVersion
resources:
  - description: 'Handles creating, editing, viewing, and deleting users.'
    enabled: true
    exportHash: 869f20040f6077c1d196e84f58a4777bccb827041f69986f84a1437015732d72
    flowId: ~exportplaceholderid-flow-cpfPageUserDetails~
    globals: []
    id: ~exportplaceholderid-flowVersion-cpfPageUserDetails~
    name: cpf-page-user-details
    nodes:
      - config:
          bodyTemplate: pageData
          bodyTemplateType: path
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfPageUsersDetails~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: 8R2fOKkaG6
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 500
          'y': 1780
        outputIds:
          - - ei6rmK3VLD
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: ei6rmK3VLD
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 500
          'y': 1880
        outputIds: []
        type: DebugNode
      - config:
          expression: '{{data.params.userId}} === ''new'''
        id: 8ddsHLzxUz
        meta:
          category: logic
          description: ''
          label: New User?
          name: conditional
          x: 460
          'y': 600
        outputIds:
          - - WJ6v9eTw95
          - - 0cbdy3rsf0
        type: ConditionalNode
      - config:
          emailOrIdTemplate: '{{data.params.userId}}'
          findMetadata: false
          findMethod: emailOrId
          findMultiple: false
          resultPath: pageData.user
          sortDirection: asc
          sortField: email
        id: WJ6v9eTw95
        meta:
          category: experience
          description: ''
          label: 'User: Get'
          name: get-experience-user
          x: 200
          'y': 840
        outputIds:
          - - wgq9n1O5O3
        type: GetExperienceUserNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfVerifyRole~
          customNodeVersion: default
          fields:
            - id: requiredRole
              value: admin
            - id: user
              value: experience.user
          isInstance: false
          resultPath: ''
        id: EEzJDIkhX_
        meta:
          category: experience
          description: ''
          label: 'CPF: Verify Role'
          name: custom-node-execute-node
          x: 360
          'y': 380
        outputIds:
          - - DvHEvbC3s4
          - - 8ddsHLzxUz
        type: CustomNodeExecuteNode
      - config:
          bodyTemplate: /
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: DvHEvbC3s4
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 260
          'y': 500
        outputIds:
          - - RyrZoceQe7
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: RyrZoceQe7
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 260
          'y': 600
        outputIds: []
        type: DebugNode
      - config:
          expression: '{{pageData.user}}'
        id: wgq9n1O5O3
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 200
          'y': 940
        outputIds:
          - - JW6qx4ocl2
          - - 4jPCZpPKLz
        type: ConditionalNode
      - config:
          bodyTemplateType: none
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfPage404~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '404'
          sameSiteTemplate: ''
        id: JW6qx4ocl2
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 200
          'y': 1540
        outputIds:
          - - fw7r9r_Yws
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: fw7r9r_Yws
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 200
          'y': 1640
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: pageData
          bodyTemplateType: path
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfPageUsersDetails~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '200'
          sameSiteTemplate: ''
        id: d5vkkiFTCy
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 700
          'y': 940
        outputIds:
          - - O531uzuIGs
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: O531uzuIGs
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 700
          'y': 1040
        outputIds: []
        type: DebugNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfGetTenancyLevel~
          customNodeVersion: default
          fields:
            - id: user
              value: pageData.user
          isInstance: false
          resultPath: working.editedUserLevel
        id: 4jPCZpPKLz
        meta:
          category: experience
          description: ''
          label: 'CPF: Get Tenancy Level'
          name: custom-node-execute-node
          x: 300
          'y': 1060
        outputIds:
          - - JW6qx4ocl2
          - - DdPtoRUS1P
        type: CustomNodeExecuteNode
      - config:
          expression: '{{working.editedUserLevel}} != 0'
        id: DdPtoRUS1P
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 400
          'y': 1180
        outputIds:
          - - JW6qx4ocl2
          - - uXu59mq8uy
        type: ConditionalNode
      - config: {}
        id: CikL8Qz_q0
        meta:
          annotationText: Cannot edit the system admin.
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 620
          'y': 1160
        outputIds: []
        type: AnnotationNode
      - config:
          expression: '{{working.editedUserLevel}} == 1'
        id: JZZdxcgyfZ
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 500
          'y': 1540
        outputIds:
          - - pyRaLScd5w
          - - JigXlGCrvX
        type: ConditionalNode
      - config:
          rules:
            - destination: pageData.customerId
              type: set
              valueTemplate: '{{pageData.user.experienceGroups.[0].id}}'
              valueTemplateType: string
        id: JigXlGCrvX
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 600
          'y': 1660
        outputIds:
          - - 8R2fOKkaG6
        type: MutateNode
      - config:
          rules:
            - destination: pageData.siteId
              type: set
              valueTemplate: '{{pageData.user.experienceGroups.[0].id}}'
              valueTemplateType: string
            - destination: pageData.customerId
              type: set
              valueTemplate: '{{pageData.user.experienceGroups.[0].parentId}}'
              valueTemplateType: string
        id: pyRaLScd5w
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 400
          'y': 1660
        outputIds:
          - - 8R2fOKkaG6
        type: MutateNode
      - config: {}
        id: etb5CGKm8l
        meta:
          annotationText: >-
            Find the customer and/or site IDs. If the user belongs to a
            customer, the ID will be their experience group ID. If the user
            belongs to a site, the customer is the parent of their experience
            group ID.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 320
          x: 800
          'y': 1620
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: '{{path}}?success=true'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: 3J38wRP00c
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 2520
          'y': 2440
        outputIds:
          - - hDPGIeQqGx
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: hDPGIeQqGx
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2520
          'y': 2540
        outputIds: []
        type: DebugNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfVerifyRole~
          customNodeVersion: default
          fields:
            - id: requiredRole
              value: admin
            - id: user
              value: experience.user
          isInstance: false
          resultPath: ''
        id: s4XuIcW1WH
        meta:
          category: experience
          description: ''
          label: 'CPF: Verify Role'
          name: custom-node-execute-node
          x: 1620
          'y': 140
        outputIds:
          - - ukmccQ2XNv
          - - bhNMoQBucb
        type: CustomNodeExecuteNode
      - config: {}
        id: 27JWW0tjbn
        meta:
          annotationText: Only admin roles can create/edit users.
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 1820
          'y': 120
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: /
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: ukmccQ2XNv
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 1620
          'y': 380
        outputIds:
          - - ZckEsud1aJ
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: ZckEsud1aJ
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 1620
          'y': 480
        outputIds: []
        type: DebugNode
      - config:
          emailOrIdTemplate: '{{data.params.userId}}'
          findMetadata: false
          findMethod: emailOrId
          findMultiple: false
          resultPath: working.user
          sortDirection: asc
          sortField: email
        id: ckKK5uJGYD
        meta:
          category: experience
          description: ''
          label: 'User: Get'
          name: get-experience-user
          x: 2220
          'y': 1440
        outputIds:
          - - aPiVxDcoTN
        type: GetExperienceUserNode
      - config:
          emailOrIdTemplate: '{{experience.user.id}}'
          groupIdTemplate: '{{working.user.experienceGroups.[0].id}}'
        id: aPiVxDcoTN
        meta:
          category: experience
          description: ''
          label: 'Group: Verify'
          name: verify-experience-group
          x: 2220
          'y': 1540
        outputIds:
          - - B_Jq6sKTZg
          - - PZeyw8RUOg
        type: VerifyExperienceGroupNode
      - config:
          bodyTemplate: /users
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: B_Jq6sKTZg
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 2120
          'y': 1660
        outputIds:
          - - PNyXRv7kDK
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: PNyXRv7kDK
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2120
          'y': 1760
        outputIds: []
        type: DebugNode
      - config: {}
        id: td3hxtEUpQ
        meta:
          annotationText: >-
            Make sure the user being edited is at or beneath the logged in user
            in the tenancy hierarchy.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 260
          x: 2420
          'y': 1500
        outputIds: []
        type: AnnotationNode
      - config:
          expression: '{{data.body.email}} === {{working.user.email}}'
        id: PZeyw8RUOg
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 2420
          'y': 1660
        outputIds:
          - - yzFdLF1mJY
          - - zL5ngPbA2c
        type: ConditionalNode
      - config: {}
        id: qAgFpQeqiJ
        meta:
          annotationText: >-
            If the user is attempting to change the email, verify the email is
            not being used by another user.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 260
          x: 2620
          'y': 1660
        outputIds: []
        type: AnnotationNode
      - config:
          emailOrIdTemplate: '{{data.body.email}}'
          findMetadata: false
          findMethod: emailOrId
          findMultiple: false
          resultPath: working.existingUser
          sortDirection: asc
          sortField: email
        id: yzFdLF1mJY
        meta:
          category: experience
          description: ''
          label: 'User: Get'
          name: get-experience-user
          x: 2320
          'y': 1780
        outputIds:
          - - MsbhQ38a8g
        type: GetExperienceUserNode
      - config:
          expression: '!{{working.existingUser}}'
        id: MsbhQ38a8g
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 2320
          'y': 1880
        outputIds:
          - - Hxt6pAhcdf
          - - zL5ngPbA2c
        type: ConditionalNode
      - config:
          bodyTemplate: '{{data.path}}?error=User with this email already exists'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: Hxt6pAhcdf
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 2220
          'y': 2000
        outputIds:
          - - OvMnhZaQJW
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: OvMnhZaQJW
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2220
          'y': 2100
        outputIds: []
        type: DebugNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfGetTenancyLevel~
          customNodeVersion: default
          fields:
            - id: user
              value: experience.user
          isInstance: false
          resultPath: pageData.userLevel
        id: bhNMoQBucb
        meta:
          category: experience
          description: ''
          label: 'CPF: Get Tenancy Level'
          name: custom-node-execute-node
          x: 1720
          'y': 260
        outputIds:
          - - ukmccQ2XNv
          - - lJyflGNkqN
        type: CustomNodeExecuteNode
      - config:
          expression: '{{pageData.userLevel}} == 1'
        id: 83Qk41ctuH
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 1820
          'y': 600
        outputIds:
          - - ftkOH0ioca
          - - ZwuibtPJK9
        type: ConditionalNode
      - config: {}
        id: NnzjUiz_x4
        meta:
          annotationText: >-
            If the user is a member of a customer, override the provided
            customer with the user's group.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 260
          x: 2020
          'y': 580
        outputIds: []
        type: AnnotationNode
      - config:
          rules:
            - destination: data.body.customer
              type: set
              valueTemplate: '{{experience.user.experienceGroups.[0].id}}'
              valueTemplateType: string
        id: ZwuibtPJK9
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 1920
          'y': 720
        outputIds:
          - - ftkOH0ioca
        type: MutateNode
      - config:
          expression: '{{pageData.userLevel}} == 2'
        id: ftkOH0ioca
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 1820
          'y': 840
        outputIds:
          - - R6O5hjzfIh
          - - Q47NjRcHcd
        type: ConditionalNode
      - config:
          rules:
            - destination: data.body.site
              type: set
              valueTemplate: '{{experience.user.experienceGroups.[0].id}}'
              valueTemplateType: string
        id: Q47NjRcHcd
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 1920
          'y': 960
        outputIds:
          - - R6O5hjzfIh
        type: MutateNode
      - config: {}
        id: LOOFl05mnz
        meta:
          annotationText: >-
            If the user is a member of a site, override the provided customer
            and site values. The site should be the logged in user's site. The
            customer should be cleared.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 320
          x: 2020
          'y': 820
        outputIds: []
        type: AnnotationNode
      - config:
          errorsPath: working.error
          schema: |-
            {
                "type": "object",
                "properties": {
                    "email": {"type": "string", "format": "email"},
                    "role": {"type": "string", "enum": ["viewer", "editor", "admin"]},
                    "customer": {"type": "string", "minLength": 1}
                },
                "required": ["email", "role", "customer"]
            }
          schemaType: json
          toValidatePath: data.body
        id: R6O5hjzfIh
        meta:
          category: logic
          description: ''
          label: Validate Payload
          name: validate-payload
          x: 1820
          'y': 1080
        outputIds:
          - - CG3AnrfvQO
          - - XPUVjKvcLv
        type: ValidatePayloadNode
      - config:
          bodyTemplate: '{{data.path}}?error=Missing or invalid fields.'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: CG3AnrfvQO
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 1720
          'y': 1200
        outputIds:
          - - VKPGEkrPRO
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: VKPGEkrPRO
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 1720
          'y': 1300
        outputIds: []
        type: DebugNode
      - config:
          expression: '{{data.params.userId}} !== ''new'''
        id: XPUVjKvcLv
        meta:
          category: logic
          description: ''
          label: Edit User?
          name: conditional
          x: 2020
          'y': 1300
        outputIds:
          - - CS2JtNiYR8
          - - ckKK5uJGYD
        type: ConditionalNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfVerifyGroups~
          customNodeVersion: default
          fields:
            - id: userId
              value: '{{experience.user.id}}'
            - id: customerId
              value: '{{#lt pageData.userLevel 2}}{{data.body.customer}}{{/lt}}'
            - id: siteId
              value: '{{data.body.site}}'
          isInstance: false
          resultPath: ''
        id: zL5ngPbA2c
        meta:
          category: experience
          description: ''
          label: 'CPF: Verify Groups'
          name: custom-node-execute-node
          x: 2520
          'y': 2000
        outputIds:
          - - uyLKIx3Prn
          - - Wc9cPSe8yJ
        type: CustomNodeExecuteNode
      - config: {}
        id: L7lW7uhOgK
        meta:
          annotationText: >-
            Verify the user has access to the provided site and/or customer IDs.
            If the user is a member of a site, clear the customer ID and use
            only the site ID.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 340
          x: 2720
          'y': 1980
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: '{{data.path}}?error=Invalid customer or site IDs'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: uyLKIx3Prn
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 2420
          'y': 2120
        outputIds:
          - - eOugaGmufN
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: eOugaGmufN
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2420
          'y': 2220
        outputIds: []
        type: DebugNode
      - config:
          dataMethod: individualFields
          emailOrIdTemplate: '{{data.params.userId}}'
          emailTemplate: '{{data.body.email}}'
          firstNameTemplate: '{{data.body.firstName}}'
          groupIdTemplates:
            - '{{working.group}}'
          invalidateExistingTokens: false
          lastNameTemplate: '{{data.body.lastName}}'
          passwordTemplate: ''
          resultPath: working.updateResult
          userTags:
            - keyTemplate: title
              valueTemplate: '{{data.body.title}}'
            - keyTemplate: cpf_role
              valueTemplate: '{{data.body.role}}'
        id: tA2623ZoOX
        meta:
          category: experience
          description: ''
          label: 'User: Update'
          name: update-experience-user
          x: 2620
          'y': 2220
        outputIds:
          - - pcvZLEPYQp
        type: UpdateExperienceUserNode
      - config:
          rules:
            - destination: working.group
              type: set
              valueTemplate: '{{defaultTo data.body.site data.body.customer}}'
              valueTemplateType: string
        id: Wc9cPSe8yJ
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 2620
          'y': 2120
        outputIds:
          - - tA2623ZoOX
        type: MutateNode
      - config: {}
        id: nTomoWc6ol
        meta:
          annotationText: >-
            Users are only ever a member of one group. If a site is provided,
            add them to the site. If no site is provided, they are added to the
            customer.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 320
          x: 2820
          'y': 2120
        outputIds: []
        type: AnnotationNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfGetTenancyLevel~
          customNodeVersion: default
          fields:
            - id: user
              value: experience.user
          isInstance: false
          resultPath: pageData.userLevel
        id: APK9qHmwzu
        meta:
          category: experience
          description: ''
          label: 'CPF: Get Tenancy Level'
          name: custom-node-execute-node
          x: 260
          'y': 260
        outputIds:
          - - DvHEvbC3s4
          - - EEzJDIkhX_
        type: CustomNodeExecuteNode
      - config:
          expression: '{{data.params.userId}} !== {{experience.user.id}}'
        id: mv0bNKbFo7
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 160
          'y': 140
        outputIds:
          - - u1XvewOaQp
          - - APK9qHmwzu
        type: ConditionalNode
      - config: {}
        id: g4IbbuEy8M
        meta:
          annotationText: >-
            If the user is trying to edit themselves, redirect to the profile
            page: `/me/profile`.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 260
          x: 380
          'y': 100
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: /me/profile
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: u1XvewOaQp
        meta:
          category: output
          description: ''
          label: Redirect
          mqttTopicsType: []
          name: endpoint-reply
          x: 60
          'y': 260
        outputIds:
          - - zUO2V10CJ5
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: zUO2V10CJ5
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 60
          'y': 360
        outputIds: []
        type: DebugNode
      - config:
          emailOrIdTemplate: '{{data.body.email}}'
          findMetadata: false
          findMethod: emailOrId
          findMultiple: false
          resultPath: working.existingUser
          sortDirection: asc
          sortField: email
        id: CS2JtNiYR8
        meta:
          category: experience
          description: ''
          label: 'User: Get'
          name: get-experience-user
          x: 1820
          'y': 1420
        outputIds:
          - - Gvvz0CUhOZ
        type: GetExperienceUserNode
      - config:
          expression: '{{working.existingUser}}'
        id: Gvvz0CUhOZ
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 1820
          'y': 1520
        outputIds:
          - - sFX0yo2YGI
          - - _hHSaC3Po1
        type: ConditionalNode
      - config: {}
        id: co2C3d4s0U
        meta:
          annotationText: 'When creating a user, verify that the email doesn''t already exist.'
          category: annotation
          height: 120
          label: Note
          name: note
          width: 260
          x: 1520
          'y': 1420
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: '{{data.path}}?error=User with this email already exists'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: _hHSaC3Po1
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 1900
          'y': 1660
        outputIds:
          - - 6_EVkOjVPE
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: 6_EVkOjVPE
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 1900
          'y': 1760
        outputIds: []
        type: DebugNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfVerifyGroups~
          customNodeVersion: default
          fields:
            - id: userId
              value: '{{experience.user.id}}'
            - id: customerId
              value: '{{#lt pageData.userLevel 2}}{{data.body.customer}}{{/lt}}'
            - id: siteId
              value: '{{data.body.site}}'
          isInstance: false
          resultPath: ''
        id: sFX0yo2YGI
        meta:
          category: experience
          description: ''
          label: 'CPF: Verify Groups'
          name: custom-node-execute-node
          x: 1600
          'y': 1660
        outputIds:
          - - hvO3tQ_ZAg
          - - Kf6Oc0imXL
        type: CustomNodeExecuteNode
      - config: {}
        id: TVR5COG4rh
        meta:
          annotationText: >-
            Verify the user has access to the provided site and/or customer IDs.
            If the user is a member of a site, clear the customer ID and use
            only the site ID.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 340
          x: 1220
          'y': 1640
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: '{{data.path}}?error=Invalid customer or site IDs'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: hvO3tQ_ZAg
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 1500
          'y': 1780
        outputIds:
          - - EAt7wTCkwo
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: EAt7wTCkwo
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 1500
          'y': 1880
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: '/users/{{working.createResult.id}}?created=true'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: UqMqnJOHZ0
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 1600
          'y': 2200
        outputIds:
          - - ahWSyMIdUh
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: ahWSyMIdUh
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 1600
          'y': 2300
        outputIds: []
        type: DebugNode
      - config:
          rules:
            - destination: working.group
              type: set
              valueTemplate: '{{defaultTo data.body.site data.body.customer}}'
              valueTemplateType: string
        id: Kf6Oc0imXL
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 1700
          'y': 1780
        outputIds:
          - - 0alm8APLR7
        type: MutateNode
      - config:
          dataMethod: individualFields
          emailTemplate: '{{data.body.email}}'
          firstNameTemplate: '{{data.body.firstName}}'
          groupIdTemplates:
            - '{{working.group}}'
          lastNameTemplate: '{{data.body.lastName}}'
          passwordTemplate: '{{working.password}}'
          resultPath: working.createResult
          userTags:
            - keyTemplate: title
              valueTemplate: '{{data.body.title}}'
            - keyTemplate: cpf_role
              valueTemplate: '{{data.body.role}}'
        id: aB9hUjZL60
        meta:
          category: experience
          description: ''
          label: 'User: Create'
          name: create-experience-user
          x: 1700
          'y': 1980
        outputIds:
          - - l8WZe2RolU
        type: CreateExperienceUserNode
      - config:
          destinationPath: working.password
          idTypeTemplate: uuidv4
        id: 0alm8APLR7
        meta:
          category: logic
          description: ''
          label: Generate ID
          name: generate-id
          x: 1700
          'y': 1880
        outputIds:
          - - aB9hUjZL60
        type: GenerateIdNode
      - config:
          expression: '{{working.createResult.error}}'
        id: l8WZe2RolU
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 1700
          'y': 2080
        outputIds:
          - - UqMqnJOHZ0
          - - eUQWz_JgJM
        type: ConditionalNode
      - config:
          bodyTemplate: '{{data.path}}?error={{{working.createResult.error.message}}}'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: eUQWz_JgJM
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 1800
          'y': 2200
        outputIds:
          - - gT7BHyWt0W
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: gT7BHyWt0W
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 1800
          'y': 2300
        outputIds: []
        type: DebugNode
      - config: {}
        id: MlLlszSe1y
        meta:
          annotationText: >-
            User is successfully created. This would be a good spot to send an
            email welcome message with a link to the forgot password page to set
            their password.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 320
          x: 1260
          'y': 2200
        outputIds: []
        type: AnnotationNode
      - config:
          expression: '{{working.updateResult.error}}'
        id: pcvZLEPYQp
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 2620
          'y': 2320
        outputIds:
          - - 3J38wRP00c
          - - 05BylfzZgS
        type: ConditionalNode
      - config:
          bodyTemplate: '{{data.path}}?error={{{working.updateResult.error.message}}}'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: 05BylfzZgS
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 2720
          'y': 2440
        outputIds:
          - - 9X1n0pda0b
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: 9X1n0pda0b
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2720
          'y': 2540
        outputIds: []
        type: DebugNode
      - config:
          expression: '{{data.body.delete}} === "true"'
        id: lJyflGNkqN
        meta:
          category: logic
          description: ''
          label: Delete?
          name: conditional
          x: 2140
          'y': 380
        outputIds:
          - - 83Qk41ctuH
          - - WzCtOdEYgb
        type: ConditionalNode
      - config: {}
        id: BipxPUg0yF
        meta:
          annotationText: 'If a user is being deleted, the form posts the `delete=true` field.'
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 2340
          'y': 340
        outputIds: []
        type: AnnotationNode
      - config:
          expression: '{{data.params.userId}} !== {{experience.user.id}}'
        id: WzCtOdEYgb
        meta:
          category: logic
          description: ''
          label: Themselves?
          name: conditional
          x: 2480
          'y': 600
        outputIds:
          - - _cqJGbs3NM
          - - 18yxYPl81z
        type: ConditionalNode
      - config: {}
        id: t1oY2KKz1J
        meta:
          annotationText: A user cannot delete themselves.
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 2680
          'y': 580
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: '{{data.path}}?error=Cannot delete yourself'
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: _cqJGbs3NM
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 2380
          'y': 720
        outputIds:
          - - 5m8HqoXSIO
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: 5m8HqoXSIO
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2380
          'y': 820
        outputIds: []
        type: DebugNode
      - config:
          emailOrIdTemplate: '{{data.params.userId}}'
          findMetadata: false
          findMethod: emailOrId
          findMultiple: false
          resultPath: working.userToDelete
          sortDirection: asc
          sortField: email
        id: 18yxYPl81z
        meta:
          category: experience
          description: ''
          label: 'User: Get'
          name: get-experience-user
          x: 2580
          'y': 720
        outputIds:
          - - Y_5HEJvkVe
        type: GetExperienceUserNode
      - config:
          emailOrIdTemplate: '{{experience.user.id}}'
          groupIdTemplate: '{{working.userToDelete.experienceGroups.[0].id}}'
        id: Y_5HEJvkVe
        meta:
          category: experience
          description: ''
          label: 'Group: Verify'
          name: verify-experience-group
          x: 2580
          'y': 820
        outputIds:
          - - LJjSz1c2VI
          - - FmcANkDvqc
        type: VerifyExperienceGroupNode
      - config: {}
        id: I2Ki8yDFhG
        meta:
          annotationText: >-
            Verify the user to delete is at or below the logged in user in the
            tenancy hierarchy.
          category: annotation
          height: 120
          label: Note
          name: note
          width: 260
          x: 2780
          'y': 800
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: /users
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: LJjSz1c2VI
        meta:
          category: output
          description: ''
          label: Error
          mqttTopicsType: []
          name: endpoint-reply
          x: 2480
          'y': 940
        outputIds:
          - - pmYaaGuzs8
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: pmYaaGuzs8
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2480
          'y': 1040
        outputIds: []
        type: DebugNode
      - config:
          emailOrIdTemplate: '{{data.params.userId}}'
          resultPath: working.deleteResult
        id: FmcANkDvqc
        meta:
          category: experience
          description: ''
          label: 'User: Delete'
          name: delete-experience-user
          x: 2680
          'y': 940
        outputIds:
          - - PeKPClKORI
        type: DeleteExperienceUserNode
      - config:
          bodyTemplate: /users
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: PeKPClKORI
        meta:
          category: output
          description: ''
          label: 'Endpoint: Reply'
          mqttTopicsType: []
          name: endpoint-reply
          x: 2680
          'y': 1040
        outputIds:
          - - EpXrmS4KkR
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: EpXrmS4KkR
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 2680
          'y': 1140
        outputIds: []
        type: DebugNode
      - config:
          expression: '{{pageData.userLevel}} == 1'
        id: 0cbdy3rsf0
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 700
          'y': 720
        outputIds:
          - - nPJhkMqwQS
          - - gmOHhcDqba
        type: ConditionalNode
      - config:
          rules:
            - destination: pageData.customerId
              type: set
              valueTemplate: '{{experience.user.experienceGroups.[0].id}}'
              valueTemplateType: string
        id: gmOHhcDqba
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 800
          'y': 840
        outputIds:
          - - d5vkkiFTCy
        type: MutateNode
      - config:
          rules:
            - destination: pageData.siteId
              type: set
              valueTemplate: '{{experience.user.experienceGroups.[0].id}}'
              valueTemplateType: string
            - destination: pageData.customerId
              type: set
              valueTemplate: '{{experience.user.experienceGroups.[0].parentId}}'
              valueTemplateType: string
        id: nPJhkMqwQS
        meta:
          category: logic
          description: ''
          label: Mutate
          name: mutate
          x: 600
          'y': 840
        outputIds:
          - - d5vkkiFTCy
        type: MutateNode
      - config: {}
        id: aaDxv_BPYy
        meta:
          annotationText: >-
            For new users, default the customer and site IDs based on the
            currently logged in user.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 320
          x: 1000
          'y': 720
        outputIds: []
        type: AnnotationNode
      - config:
          emailOrIdTemplate: '{{experience.user.id}}'
          groupIdTemplate: '{{pageData.user.experienceGroups.[0].id}}'
        id: uXu59mq8uy
        meta:
          category: experience
          description: ''
          label: 'Group: Verify'
          name: verify-experience-group
          x: 500
          'y': 1300
        outputIds:
          - - JW6qx4ocl2
          - - JZZdxcgyfZ
        type: VerifyExperienceGroupNode
      - config: {}
        id: WmIsdk3gIa
        meta:
          annotationText: >-
            Verify the logged in user is at or above the user being edited in
            the tenancy hierarchy.
          category: annotation
          height: 140
          label: Note
          name: note
          width: 260
          x: 700
          'y': 1280
        outputIds: []
        type: AnnotationNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-getUsersUserId~
        meta:
          category: trigger
          description: ''
          label: 'GET /users/{userid}'
          name: endpoint
          uiId: NgOFcZkOOy
          x: 160
          'y': 40
        outputIds:
          - - mv0bNKbFo7
        type: endpoint
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-postUsersUserId~
        meta:
          category: trigger
          description: ''
          label: 'POST /users/{userId}'
          name: endpoint
          uiId: hSncQO8AmQ
          x: 1620
          'y': 40
        outputIds:
          - - s4XuIcW1WH
        type: endpoint
    version: develop
version: 1
