resourceType: ExperienceFlowVersion
resources:
  - description: >-
      Handles both the GET and POST reset password routes. Verifies the reset
      token and resets the user's password.
    enabled: true
    exportHash: b17f5e1a2ac2f725588d97fb672aa6e17a9307aa1bbe610cd98ea1943f1ec36d
    flowId: ~exportplaceholderid-flow-cpfPageResetPassword~
    globals: []
    id: ~exportplaceholderid-flowVersion-cpfPageResetPassword~
    name: cpf-page-reset-password
    nodes:
      - config:
          bodyTemplate: |-
            {
                "email": {{jsonEncode working.decoded.email}}
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfPageResetPassword~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: ''
          sameSiteTemplate: ''
        id: _z3hDmDVyH
        meta:
          category: output
          description: ''
          label: Show Form
          mqttTopicsType: []
          name: endpoint-reply
          x: 240
          'y': 300
        outputIds:
          - - 3DzvYAsI9p
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: 3DzvYAsI9p
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 140
          'y': 420
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: /forgot-password?resetError=true
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: 12hcC2gxe6
        meta:
          category: output
          description: ''
          label: Redirect
          mqttTopicsType: []
          name: endpoint-reply
          x: 40
          'y': 300
        outputIds:
          - - 3DzvYAsI9p
        type: EndpointReplyNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfVerifyResetToken~
          customNodeVersion: develop
          fields:
            - id: token
              value: '{{data.query.token}}'
            - id: jwtSecret
              value: '{{globals.cpf-jwt-password-reset-secret}}'
            - id: jwtIssuer
              value: '{{data.headers.x-forwarded-proto}}://{{data.headers.host}}'
          isInstance: false
          resultPath: working.decoded
        id: RPHFd2UAgJ
        meta:
          category: customNodeExecute
          description: ''
          label: Verify Reset Token
          name: custom-node-execute-node
          x: 140
          'y': 160
        outputIds:
          - - 12hcC2gxe6
          - - _z3hDmDVyH
        type: CustomNodeExecuteNode
      - config:
          customNodeId: ~exportplaceholderid-flow-cpfVerifyResetToken~
          customNodeVersion: develop
          fields:
            - id: token
              value: '{{data.query.token}}'
            - id: jwtSecret
              value: '{{globals.cpf-jwt-password-reset-secret}}'
            - id: jwtIssuer
              value: '{{data.headers.x-forwarded-proto}}://{{data.headers.host}}'
          isInstance: false
          resultPath: working.decoded
        id: 3PjS66V_SA
        meta:
          category: customNodeExecute
          description: ''
          label: Verify Reset Token
          name: custom-node-execute-node
          x: 140
          'y': 640
        outputIds:
          - - nsSrf80pi4
          - - oHYKy1ZtkH
        type: CustomNodeExecuteNode
      - config:
          level: warn
          message: ''
          property: ''
        id: nDE_SZ1D3e
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 40
          'y': 840
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: /forgot-password?resetError=true
          bodyTemplateType: string
          cookieInfo: []
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: nsSrf80pi4
        meta:
          category: output
          description: ''
          label: Redirect
          mqttTopicsType: []
          name: endpoint-reply
          x: 40
          'y': 740
        outputIds:
          - - nDE_SZ1D3e
        type: EndpointReplyNode
      - config:
          expression: '{{data.body.email}} === {{working.decoded.email}}'
        id: OMowueJsxm
        meta:
          category: logic
          description: >-
            Check to make sure the email in the post body matches the email on
            the token. If not, throw an error.
          label: Token / Submission Match?
          name: conditional
          x: 540
          'y': 840
        outputIds:
          - - mJ8H9BmmKV
          - - Wzfuhf4eLq
        type: ConditionalNode
      - config:
          errorsPath: ''
          schema: "{\n\t\"type\": \"object\",\n  \"properties\": {\n    \"email\": {\n    \t\"type\": \"string\",\n      \"format\": \"email\"\n    },\n    \"password\": {\n    \t\"type\": \"string\",\n      \"minLength\": 8,\n      \"maxLength\": 255\n    }\n  },\n  \"required\": [\"email\", \"password\"],\n  \"additionalProperties\": false\n}"
          schemaType: json
          toValidatePath: data.body
        id: oHYKy1ZtkH
        meta:
          category: logic
          description: Validate the data submitted in the post request.
          label: Validate Payload
          name: validate-payload
          x: 340
          'y': 740
        outputIds:
          - - uen4cdGxUN
          - - OMowueJsxm
        type: ValidatePayloadNode
      - config:
          dataMethod: individualFields
          emailOrIdTemplate: '{{working.decoded.id}}'
          emailTemplate: ''
          firstNameTemplate: ''
          groupIdTemplates: ''
          invalidateExistingTokens: false
          lastNameTemplate: ''
          passwordTemplate: '{{data.body.password}}'
          resultPath: working.user
          userTags: []
        id: Wzfuhf4eLq
        meta:
          category: experience
          description: Set the new password and invalidate any existing tokens.
          label: Update User
          name: update-experience-user
          x: 640
          'y': 940
        outputIds:
          - - 0zlfhTFRPd
        type: UpdateExperienceUserNode
      - config:
          emailOrIdTemplate: '{{working.user.id}}'
          invalidateExistingTokens: true
          resultPath: working.authToken
          treatAsLogin: false
          ttlTemplate: ''
        id: 0zlfhTFRPd
        meta:
          category: experience
          description: >-
            Password was successfully changed. Generate a new auth token for the
            user and invalidate any existing tokens.
          label: Generate Token
          name: experience-user-token
          x: 640
          'y': 1040
        outputIds:
          - - _u5fVrrK_Z
        type: ExperienceUserTokenNode
      - config:
          bodyTemplate: /
          bodyTemplateType: string
          cookieInfo:
            - maxAgeTemplate: ''
              nameTemplate: authorization
              pathTemplate: ''
              valueTemplate: '{{working.authToken}}'
          headerInfo: []
          mqttTopicsTemplate: []
          replyIdPath: ''
          replyType: redirect
          responseCodeTemplate: '302'
          sameSiteTemplate: ''
        id: _u5fVrrK_Z
        meta:
          category: output
          description: >-
            Redirect the user to the home page and set the new token as a
            cookie.
          label: Redirect to /
          mqttTopicsType: []
          name: endpoint-reply
          x: 640
          'y': 1140
        outputIds:
          - - EyE5bwaX_G
        type: EndpointReplyNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: EyE5bwaX_G
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 640
          'y': 1240
        outputIds: []
        type: DebugNode
      - config: {}
        id: TJIYni2UGH
        meta:
          annotationText: >-
            On an invalid token, redirect them back to the Forgot Password page
            with an error message.


            If the token is valid, render the reset form and send it the email
            address encoded in the token.
          category: annotation
          height: 220
          label: Note
          name: note
          width: 380
          x: 440
          'y': 160
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: Lj60KebjWu
        meta:
          annotationText: |-
            Render the Reset Password form again, with an error, if:  
            1. The email or password are invalid.  
            2. The provided email does not match the token's email.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 300
          x: 740
          'y': 760
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: H1b3dcINjH
        meta:
          annotationText: >-
            Update the user with the new password. Generate a new authentication
            token. Set that token on a cookie and redirect them to the home page
            (`/`).
          category: annotation
          height: 260
          label: Note
          name: note
          width: 260
          x: 840
          'y': 980
        outputIds: []
        type: AnnotationNode
      - config:
          bodyTemplate: |-
            {
                "email": {{jsonEncode working.decoded.email}},
                "error": "Invalid email or password. Password must be at least 8 characters long."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfPageResetPassword~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '400'
          sameSiteTemplate: ''
        id: uen4cdGxUN
        meta:
          category: output
          description: ''
          label: Show Form
          mqttTopicsType: []
          name: endpoint-reply
          x: 240
          'y': 840
        outputIds:
          - - P9RS81YuzO
        type: EndpointReplyNode
      - config:
          level: warn
          message: ''
          property: ''
        id: P9RS81YuzO
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 240
          'y': 940
        outputIds: []
        type: DebugNode
      - config:
          bodyTemplate: |-
            {
                "email": {{jsonEncode working.decoded.email}},
                "error": "Email address does not match address in reset token."
            }
          bodyTemplateType: json
          cookieInfo: []
          headerInfo: []
          layoutIdTemplate: ''
          mqttTopicsTemplate: []
          pageIdTemplate: ~exportplaceholderid-experienceView-cpfPageResetPassword~
          replyIdPath: ''
          replyType: page
          responseCodeTemplate: '400'
          sameSiteTemplate: ''
        id: mJ8H9BmmKV
        meta:
          category: output
          description: ''
          label: Show Form
          mqttTopicsType: []
          name: endpoint-reply
          x: 440
          'y': 940
        outputIds:
          - - EBCHj_JugM
        type: EndpointReplyNode
      - config:
          level: warn
          message: ''
          property: ''
        id: EBCHj_JugM
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 440
          'y': 1040
        outputIds: []
        type: DebugNode
      - config: {}
        id: P2XgBygIkn
        meta:
          annotationText: >-
            On an invalid token, redirect them back to the Forgot Password page
            with an error message.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 380
          x: 360
          'y': 540
        outputIds: []
        type: AnnotationNode
    triggers:
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-getResetPassword~
        meta:
          category: trigger
          description: ''
          label: GET Reset Password
          name: endpoint
          uiId: 5et48sUQig
          x: 140
          'y': 40
        outputIds:
          - - RPHFd2UAgJ
        type: endpoint
      - config: {}
        key: ~exportplaceholderid-experienceEndpoint-postResetPassword~
        meta:
          category: trigger
          description: ''
          label: POST Reset Password
          name: endpoint
          uiId: 3lsSpfUfQp
          x: 140
          'y': 540
        outputIds:
          - - 3PjS66V_SA
        type: endpoint
    version: develop
version: 1
