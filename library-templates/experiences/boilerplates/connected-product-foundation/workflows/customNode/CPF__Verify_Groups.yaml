resourceType: Flow
resources:
  - category: experience
    customNodeConfig:
      fields:
        - description: Usually `experience.user.id`.
          id: userId
          label: User ID
          required: true
          type: stringTemplate
        - description: Optional customer ID to verify. Must be an experience group ID.
          id: customerId
          label: Customer ID
          required: false
          type: stringTemplate
        - description: Optional site ID to verify. Must be an experience group ID.
          id: siteId
          label: Site ID
          required: false
          type: stringTemplate
      outputCount: 2
      resultDescription: Returns true if the user has access to the provided group(s).
      resultMode: optional
    customNodeSupports:
      - cloud
    description: >-
      Provided a site and/or customer group ID, the node verifies the IDs exist,
      the site is a child of the customer, and the user has access to the
      site/customer.
    exportHash: d4c1ec48d3ef4038630efdee5a5386a38310ca0ea9a204a3e4123af6bb4aac97
    flowClass: customNode
    globals: []
    id: ~exportplaceholderid-flow-cpfVerifyGroups~
    name: 'CPF: Verify Groups'
    nodes:
      - config:
          expression: '{{data.siteId}}'
        id: wp3wFy0BP0
        meta:
          category: logic
          description: ''
          label: Site?
          name: conditional
          x: 340
          'y': 620
        outputIds:
          - - E31ewN6g2M
          - - 0eTfegNNf4
        type: ConditionalNode
      - config:
          findMetadata: false
          findMethod: id
          idTemplate: '{{data.siteId}}'
          resultPath: working.site
        id: 0eTfegNNf4
        meta:
          category: experience
          description: ''
          label: 'Group: Get'
          name: get-experience-group
          x: 560
          'y': 740
        outputIds:
          - - ioIIrr2DeW
        type: GetExperienceGroupNode
      - config:
          expression: '{{working.site}}'
        id: ioIIrr2DeW
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 560
          'y': 840
        outputIds:
          - - TaQlUahmLQ
          - - 0X3L1b9FVx
        type: ConditionalNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: 21JMsmjqrj
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 460
          'y': 1060
        outputIds: []
        type: CustomNodeCapNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: TaQlUahmLQ
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 460
          'y': 960
        outputIds:
          - - 21JMsmjqrj
        type: DebugNode
      - config:
          emailOrIdTemplate: '{{data.userId}}'
          groupIdTemplate: '{{working.site.id}}'
        id: 0X3L1b9FVx
        meta:
          category: experience
          description: ''
          label: 'Group: Verify'
          name: verify-experience-group
          x: 660
          'y': 1060
        outputIds:
          - - lluD36VAYS
          - - 8gw6V5jiFf
        type: VerifyExperienceGroupNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: tZ2fHjMByX
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 560
          'y': 1280
        outputIds: []
        type: CustomNodeCapNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: lluD36VAYS
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 560
          'y': 1180
        outputIds:
          - - tZ2fHjMByX
        type: DebugNode
      - config:
          expression: 'length({{working.site.ancestorIds}}) !== 2'
        id: 8gw6V5jiFf
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 760
          'y': 1280
        outputIds:
          - - E31ewN6g2M
          - - GfAtq2BudD
        type: ConditionalNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: pwsPjKxAVY
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 860
          'y': 1500
        outputIds: []
        type: CustomNodeCapNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: GfAtq2BudD
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 860
          'y': 1400
        outputIds:
          - - pwsPjKxAVY
        type: DebugNode
      - config:
          expression: '{{data.customerId}}'
        id: E31ewN6g2M
        meta:
          category: logic
          description: ''
          label: Customer?
          name: conditional
          x: 340
          'y': 1620
        outputIds:
          - - kxGttoqgaE
          - - Vi75psIe9V
        type: ConditionalNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: kxGttoqgaE
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 240
          'y': 1740
        outputIds:
          - - _gy_mPlh2X
        type: DebugNode
      - config:
          branchIndexTemplate: 1
          resultSourcePath: ''
        id: _gy_mPlh2X
        meta:
          category: customNodeEnd
          description: ''
          label: Output True
          name: custom-node-end-true
          x: 240
          'y': 1840
        outputIds: []
        type: CustomNodeCapNode
      - config: {}
        id: RxtGJUd53D
        meta:
          annotationText: Does a group exist for this ID?
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 760
          'y': 740
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: 3gaCDeRW2v
        meta:
          annotationText: Is the user associated with this group ID?
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 860
          'y': 1060
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: EFXRDRgFKg
        meta:
          annotationText: Is the group at the right level in the tenancy hierarchy (site=2)?
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 960
          'y': 1280
        outputIds: []
        type: AnnotationNode
      - config:
          findMetadata: false
          findMethod: id
          idTemplate: '{{data.customerId}}'
          resultPath: working.customer
        id: Vi75psIe9V
        meta:
          category: experience
          description: ''
          label: 'Group: Get'
          name: get-experience-group
          x: 440
          'y': 1740
        outputIds:
          - - gWV82QIOZH
        type: GetExperienceGroupNode
      - config:
          expression: '{{working.customer}}'
        id: gWV82QIOZH
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 440
          'y': 1840
        outputIds:
          - - b0y3q1_tFr
          - - gV9_ynY5op
        type: ConditionalNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: QO1TG3GaU6
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 340
          'y': 2060
        outputIds: []
        type: CustomNodeCapNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: b0y3q1_tFr
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 340
          'y': 1960
        outputIds:
          - - QO1TG3GaU6
        type: DebugNode
      - config:
          emailOrIdTemplate: '{{data.userId}}'
          groupIdTemplate: '{{working.customer.id}}'
        id: gV9_ynY5op
        meta:
          category: experience
          description: ''
          label: 'Group: Verify'
          name: verify-experience-group
          x: 540
          'y': 2060
        outputIds:
          - - eLNfBlGWN6
          - - Yq1vrMUJnM
        type: VerifyExperienceGroupNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: _wVaEnaxyn
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 440
          'y': 2280
        outputIds: []
        type: CustomNodeCapNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: eLNfBlGWN6
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 440
          'y': 2180
        outputIds:
          - - _wVaEnaxyn
        type: DebugNode
      - config:
          expression: 'length({{working.customer.ancestorIds}}) === 1'
        id: Yq1vrMUJnM
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 640
          'y': 2280
        outputIds:
          - - mB_vJDKKFi
          - - vGXXkL8IED
        type: ConditionalNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: rJ6e8CogS5
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 540
          'y': 2500
        outputIds: []
        type: CustomNodeCapNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: mB_vJDKKFi
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 540
          'y': 2400
        outputIds:
          - - rJ6e8CogS5
        type: DebugNode
      - config: {}
        id: cdcdKg9lI2
        meta:
          annotationText: Does a group exist for this ID?
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 640
          'y': 1740
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: zQf1BN1q3f
        meta:
          annotationText: Is the user associated with this group ID?
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 740
          'y': 2060
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: WE6WitQ0yU
        meta:
          annotationText: >-
            Is the group at the right level in the tenancy hierarchy
            (customer=1)?
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 840
          'y': 2280
        outputIds: []
        type: AnnotationNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: duZgGVDzle
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 640
          'y': 2620
        outputIds:
          - - 955v5j4sHC
        type: DebugNode
      - config:
          branchIndexTemplate: 1
          resultSourcePath: ''
        id: 955v5j4sHC
        meta:
          category: customNodeEnd
          description: ''
          label: Output True
          name: custom-node-end-true
          x: 640
          'y': 2720
        outputIds: []
        type: CustomNodeCapNode
      - config:
          expression: '{{data.siteId}}'
        id: vGXXkL8IED
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 740
          'y': 2500
        outputIds:
          - - duZgGVDzle
          - - fXoaJpQOO3
        type: ConditionalNode
      - config: {}
        id: jgs4WkPUaB
        meta:
          annotationText: Is the provided customer a parent of the provided site?
          category: annotation
          height: 100
          label: Note
          name: note
          width: 260
          x: 960
          'y': 2580
        outputIds: []
        type: AnnotationNode
      - config:
          expression: '{{working.customer.id}} === {{working.site.parentId}}'
        id: fXoaJpQOO3
        meta:
          category: logic
          description: ''
          label: Conditional
          name: conditional
          x: 840
          'y': 2720
        outputIds:
          - - Ne_Br6LjBG
          - - UIGnXzolWk
        type: ConditionalNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: UIGnXzolWk
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 940
          'y': 2840
        outputIds:
          - - s83Nv9OMx4
        type: DebugNode
      - config:
          branchIndexTemplate: 1
          resultSourcePath: ''
        id: s83Nv9OMx4
        meta:
          category: customNodeEnd
          description: ''
          label: Output True
          name: custom-node-end-true
          x: 940
          'y': 2940
        outputIds: []
        type: CustomNodeCapNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: ''
        id: DuVZsszKA9
        meta:
          category: customNodeEnd
          description: Take the "False" path
          label: Output False
          name: custom-node-end-false
          x: 740
          'y': 2940
        outputIds: []
        type: CustomNodeCapNode
      - config:
          level: verbose
          message: ''
          property: ''
        id: Ne_Br6LjBG
        meta:
          category: debug
          description: ''
          label: Debug
          name: debug
          x: 740
          'y': 2840
        outputIds:
          - - DuVZsszKA9
        type: DebugNode
      - config: {}
        id: 9fV9Gzzsl9
        meta:
          annotationText: >-
            Given a site ID and a customer ID (both optional), this node
            verifies:  

            1. The site or customer exists

            2. The user is associated with the site or customer

            3. The site or customer are at the correct level in the tenancy
            hierarchy (customer=1, site=2)

            4. The customer is a parent of the site


            If neither a site or customer is provided, this node returns `true`.
          category: annotation
          height: 220
          label: Note
          name: note
          width: 600
          x: 20
          'y': 20
        outputIds: []
        type: AnnotationNode
    shortDescription: Verifies that a user has access to a site and/or customer group ID.
    triggers:
      - config: {}
        key: customNodeStart
        meta:
          category: trigger
          description: The Custom Node fires here ...
          label: 'Start: CPF: Verify Groups'
          name: customNodeStart
          uiId: SywHdN5P6W
          x: 20
          'y': 340
        outputIds:
          - - wp3wFy0BP0
        type: customNodeStart
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-HWhh7pWmX1myLMfAsqABT
        meta:
          category: trigger
          description: ''
          label: 'Site: Valid'
          name: virtualButton
          payload: |-
            {
                "siteId": "65245796c611088d1e9c4f9c",
                "userId": "65245816dc0ce93585f6ce00"
            }
          uiId: hbFWnl7iTh
          x: 220
          'y': 340
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-T4uSqY22Z0
        meta:
          category: trigger
          description: ''
          label: 'Site: Wrong Tenant'
          name: virtualButton
          payload: |-
            {
                "siteId": "652457b8dc0ce93585f6cdfe",
                "userId": "65245816dc0ce93585f6ce00"
            }
          uiId: Ty2PrsxV1_
          x: 420
          'y': 340
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-eMOLLfR3RQ
        meta:
          category: trigger
          description: ''
          label: 'Site: Not Found'
          name: virtualButton
          payload: |-
            {
                "siteId": "NOT_A_SITE",
                "userId": "652457b8dc0ce93585f6cdfe"
            }
          uiId: GnW7DDhZGs
          x: 420
          'y': 260
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-MMdlgavqkW
        meta:
          category: trigger
          description: ''
          label: 'Site: Customer ID instead of Site ID'
          name: virtualButton
          payload: |-
            {
                "siteId": "652457625964b9a2b3af81ea",
                "userId": "65245816dc0ce93585f6ce00"
            }
          uiId: bGPsxSneRL
          x: 220
          'y': 260
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-wJpmjoF273
        meta:
          category: trigger
          description: ''
          label: 'Customer: Valid'
          name: virtualButton
          payload: |-
            {
                "customerId": "652457625964b9a2b3af81ea",
                "userId": "65245816dc0ce93585f6ce00"
            }
          uiId: TtCWvyVw34
          x: 620
          'y': 340
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-O4LU699GuG
        meta:
          category: trigger
          description: ''
          label: 'Customer: Wrong Tenant'
          name: virtualButton
          payload: |-
            {
                "customerId": "6524578fede1d8c656ad2fb8",
                "userId": "65245816dc0ce93585f6ce00"
            }
          uiId: BZi5fDjB26
          x: 820
          'y': 340
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-eg3Dr0AWjx
        meta:
          category: trigger
          description: ''
          label: 'Customer: Not Found'
          name: virtualButton
          payload: |-
            {
                "customerId": "NOT_A_CUSTOMER",
                "userId": "652457b8dc0ce93585f6cdfe"
            }
          uiId: s_OQnh9lKi
          x: 820
          'y': 260
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-iO_XWtOO5y
        meta:
          category: trigger
          description: ''
          label: 'Customer: Site ID instead of Customer ID'
          name: virtualButton
          payload: |-
            {
                "customerId": "65245796c611088d1e9c4f9c",
                "userId": "65245816dc0ce93585f6ce00"
            }
          uiId: WegvBJ5BvE
          x: 620
          'y': 260
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-8bqQXIt6lr
        meta:
          category: trigger
          description: ''
          label: 'Both: Valid'
          name: virtualButton
          payload: |-
            {
                "siteId": "65245796c611088d1e9c4f9c",
                "customerId": "652457625964b9a2b3af81ea",
                "userId": "65245816dc0ce93585f6ce00"
            }
          uiId: etABSY3uC2
          x: 1020
          'y': 340
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
      - config: {}
        key: ~exportplaceholderid-flow-cpfVerifyGroups~-pXtK2_S7gi
        meta:
          category: trigger
          description: ''
          label: 'Both: Site not child of customer'
          name: virtualButton
          payload: |-
            {
                "siteId": "652457b8dc0ce93585f6cdfe",
                "customerId": "652457625964b9a2b3af81ea",
                "userId": "64932ffd782eb2be81ab4c46"
            }
          uiId: q_O7_9KhTi
          x: 1020
          'y': 260
        outputIds:
          - - wp3wFy0BP0
        type: virtualButton
version: 1
