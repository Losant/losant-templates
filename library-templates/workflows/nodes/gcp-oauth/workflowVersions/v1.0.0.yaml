resourceType: FlowVersion
resources:
  - customNodeConfig:
      fields:
        - description: >-
            Paste the JSON version of the [Service Account
            Key](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)
            that will be used to create the OAuth token.
          id: service_account
          label: Service Account Key
          required: true
          type: stringTemplate
        - description: >-
            Provide the [OAuth
            scope](https://developers.google.com/identity/protocols/googlescopes)
            for this token. For example:
            https://www.googleapis.com/auth/cloud-platform.
          id: scope
          label: Scope
          required: true
          type: stringTemplate
      outputCount: 1
      resultDescription: >-
        If successful, this returns an object with a single "token" property. If
        it fails for any reason, an object with an "error" property will be
        returned with more details.
      resultMode: optional
    enabled: true
    flowId: ~exportplaceholderid-flow-gcpOAuth-0~
    globals: []
    id: ~exportplaceholderid-flowVersion-v100-0~
    nodes:
      - config:
          branchIndexTemplate: 0
          resultSourcePath: working.output
        id: nHhH34kOD8
        meta:
          category: customNodeEnd
          description: End the Custom Node run
          label: Output
          name: custom-node-end-single
          x: 200
          'y': 1220
        outputIds: []
        type: CustomNodeCapNode
      - config:
          destination: data.service_account
          source: data.service_account
        id: JnX-c9kub0
        meta:
          category: logic
          description: ''
          id: JnX-c9kub0
          label: 'JSON: Decode'
          name: json-decode
          x: 280
          'y': 180
        outputIds:
          - - KRfNvCYAlE
        type: JsonDecodeNode
      - config:
          algorithmTemplate: RS256
          dataTemplate: |-
            {
            "aud": "https://www.googleapis.com/oauth2/v4/token",
            "scope":"{{data.scope}}",
            "sub": "{{data.service_account.client_email}}"
            }
          dataTemplateType: json
          destinationPath: working.jwt
          expiresIn: 3600
          issuerTemplate: '{{data.service_account.client_email}}'
          secretTemplate: '{{data.service_account.private_key}}'
        id: lYZqc-fXw4
        meta:
          category: logic
          description: ''
          isExpRequired: true
          label: 'JWT: Create'
          name: jwt-create
          timeUnit: Hours
          x: 180
          'y': 500
        outputIds:
          - - Hj6v90KSam
        type: JWTCreateNode
      - config:
          authCredentials: {}
          authType: none
          bodyTemplate: >-
            grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion={{
            working.jwt }}
          caCertTemplate: ''
          disableSSLVerification: false
          encodingTemplate: utf8
          errorBehavior: payloadPath
          errorPath: working.output
          headerInfo:
            - key: Content-Type
              valueTemplate: application/x-www-form-urlencoded
          method: POST
          requestEncodingTemplate: utf8
          responsePath: working.result
          timeoutTemplate: ''
          uriTemplate: 'https://www.googleapis.com/oauth2/v4/token'
        id: Hj6v90KSam
        meta:
          category: data
          description: ''
          id: RPIJUY9_eF
          label: HTTP
          name: http
          x: 180
          'y': 580
        outputIds:
          - - LqF_XVZBJh
        type: HttpNode
      - config:
          message: ''
          property: ''
        id: UamQlE4m3g
        meta:
          category: output
          description: ''
          id: UamQlE4m3g
          label: Debug
          name: debug
          x: 200
          'y': 1140
        outputIds:
          - - nHhH34kOD8
        type: DebugNode
      - config:
          expression: '{{working.output}} === undefined'
        id: LqF_XVZBJh
        meta:
          category: logic
          description: ''
          id: LqF_XVZBJh
          label: Conditional
          name: conditional
          x: 180
          'y': 660
        outputIds:
          - - UamQlE4m3g
          - - 0reYUy6y7f
        type: ConditionalNode
      - config:
          keyName: 'token:{{data.service_account.private_key_id}}:{{data.scope}}'
          resultPath: ''
          value: >-
            { "token": "{{working.result.body.access_token}}", "expires_on":
            {{add time 3000000}} }
          valueType: json
        id: BzsFeXmGAH
        meta:
          category: data
          description: ''
          id: BzsFeXmGAH
          label: 'Storage: Set Value'
          name: store-value
          x: 520
          'y': 1000
        outputIds:
          - - UamQlE4m3g
        type: StoreValueNode
      - config:
          rules:
            - destination: working.output.token
              type: set
              valueTemplate: '{{working.result.body.access_token}}'
        id: '-69MEPQtlL'
        meta:
          category: logic
          description: ''
          id: '-69MEPQtlL'
          label: Mutate
          name: mutate
          x: 520
          'y': 920
        outputIds:
          - - BzsFeXmGAH
        type: MutateNode
      - config:
          defaultValue: 'null'
          defaultValueType: json
          keyName: 'token:{{data.service_account.private_key_id}}:{{data.scope}}'
          valuePath: working.cached
        id: KRfNvCYAlE
        meta:
          category: data
          description: ''
          id: KRfNvCYAlE
          label: 'Storage: Get Value'
          name: get-value
          x: 280
          'y': 300
        outputIds:
          - - jVO-llN3AU
        type: GetValueNode
      - config:
          expression: >-
            {{working.cached}} !== null && {{working.cached.expires_on}} >
            {{time}}
        id: jVO-llN3AU
        meta:
          category: logic
          description: ''
          id: jVO-llN3AU
          label: Conditional
          name: conditional
          x: 280
          'y': 400
        outputIds:
          - - lYZqc-fXw4
          - - kiHyYpPqUq
        type: ConditionalNode
      - config:
          rules:
            - destination: working.output.token
              type: set
              valueTemplate: '{{working.cached.token}}'
        id: kiHyYpPqUq
        meta:
          category: logic
          description: ''
          id: '-69MEPQtlL'
          label: Mutate
          name: mutate
          x: 380
          'y': 500
        outputIds:
          - - NsVAI2X9LI
        type: MutateNode
      - config:
          branchIndexTemplate: 0
          resultSourcePath: working.output
        id: QBpZfOysRM
        meta:
          category: customNodeEnd
          description: End the Custom Node run
          label: Output
          name: custom-node-end-single
          x: 380
          'y': 660
        outputIds: []
        type: CustomNodeCapNode
      - config:
          message: ''
          property: ''
        id: NsVAI2X9LI
        meta:
          category: output
          description: ''
          id: UamQlE4m3g
          label: Debug
          name: debug
          x: 380
          'y': 580
        outputIds:
          - - QBpZfOysRM
        type: DebugNode
      - config: {}
        id: NFRXBW_zAp
        meta:
          annotationText: >-
            Check the token cache. If we've already generated a token with this
            private_key_id / scope combination, and it's not expired, return it.
          category: annotation
          height: 160
          label: Note
          name: note
          width: 260
          x: 480
          'y': 300
        outputIds: []
        type: AnnotationNode
      - config: {}
        id: 3BWNDqQW0G
        meta:
          annotationText: >-
            Cache the resulting token so we don't have to request it from Google
            every time the caller needs it.
          category: annotation
          height: 140
          label: Note
          name: note
          width: 260
          x: 720
          'y': 920
        outputIds: []
        type: AnnotationNode
      - config:
          expression: '{{working.result.statusCode}} == 200'
        id: 0reYUy6y7f
        meta:
          category: logic
          description: ''
          id: 0reYUy6y7f
          label: Conditional
          name: conditional
          x: 320
          'y': 780
        outputIds:
          - - ZGYTTDiss0
          - - '-69MEPQtlL'
        type: ConditionalNode
      - config:
          rules:
            - destination: working.output.error
              type: set
              valueTemplate: '{{working.result.body}}'
        id: ZGYTTDiss0
        meta:
          category: logic
          description: ''
          id: ZGYTTDiss0
          label: Mutate
          name: mutate
          x: 320
          'y': 920
        outputIds:
          - - UamQlE4m3g
        type: MutateNode
    triggers:
      - config: {}
        key: customNodeStart
        meta:
          category: trigger
          description: ''
          label: 'Start: GCP: OAuth'
          name: customNodeStart
          uiId: SywHdN5P6W
          x: 280
          'y': 60
        outputIds:
          - - JnX-c9kub0
        type: customNodeStart
      - config: {}
        key: ~exportplaceholderid-flow-gcpOAuth-0~-Kx85Ssb_TNVGqaTpVWsns
        meta:
          category: trigger
          description: ''
          deviceId: null
          id: 31OF4WTGQH
          label: Virtual Button
          name: virtualButton
          payload: |-
            {
              "service_account": {   "type": "service_account",   "project_id": "your-project-id",   "private_key_id": "xxxxxx",   "private_key": "-----BEGIN PRIVATE KEY-----\nxxxxxx\n-----END PRIVATE KEY-----\n",   "client_email": "example@your-project-id.iam.gserviceaccount.com",   "client_id": "xxxx",   "auth_uri": "https://accounts.google.com/o/oauth2/auth",   "token_uri": "https://oauth2.googleapis.com/token",   "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",   "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/example%40your-project-id.iam.gserviceaccount.com" },
              "scope": "https://www.googleapis.com/auth/cloud-platform"
            }
          uiId: 31OF4WTGQH
          x: 80
          'y': 180
        outputIds:
          - - KRfNvCYAlE
        type: virtualButton
    version: v1.0.0
version: 1
